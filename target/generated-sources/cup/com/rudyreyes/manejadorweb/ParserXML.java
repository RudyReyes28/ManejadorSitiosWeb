
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package com.rudyreyes.manejadorweb;

import java_cup.runtime.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class ParserXML extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return ParserXMLSym.class;
}

  /** Default constructor. */
  @Deprecated
  public ParserXML() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public ParserXML(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public ParserXML(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\047\000\002\002\004\000\002\002\010\000\002\002" +
    "\011\000\002\003\012\000\002\003\012\000\002\003\013" +
    "\000\002\004\007\000\002\006\004\000\002\006\003\000" +
    "\002\016\010\000\002\017\003\000\002\017\003\000\002" +
    "\017\003\000\002\017\003\000\002\017\003\000\002\005" +
    "\007\000\002\007\010\000\002\010\007\000\002\011\004" +
    "\000\002\011\003\000\002\012\010\000\002\013\003\000" +
    "\002\013\012\000\002\013\012\000\002\013\012\000\002" +
    "\013\003\000\002\013\003\000\002\013\003\000\002\013" +
    "\003\000\002\020\012\000\002\021\012\000\002\022\012" +
    "\000\002\023\012\000\002\024\012\000\002\014\005\000" +
    "\002\014\003\000\002\015\014\000\002\015\013\000\002" +
    "\025\002" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\245\000\004\004\005\001\002\000\006\002\242\004" +
    "\241\001\002\000\004\007\006\001\002\000\004\010\007" +
    "\001\002\000\004\011\010\001\002\000\004\012\011\001" +
    "\002\000\010\013\013\014\012\015\015\001\002\000\004" +
    "\012\217\001\002\000\004\012\166\001\002\000\006\002" +
    "\000\004\000\001\002\000\004\012\016\001\002\000\004" +
    "\005\017\001\002\000\004\004\021\001\002\000\006\004" +
    "\uffdb\032\143\001\002\000\004\016\022\001\002\000\004" +
    "\005\023\001\002\000\004\004\025\001\002\000\006\004" +
    "\025\025\uffee\001\002\000\004\017\030\001\002\000\004" +
    "\025\027\001\002\000\006\004\ufff0\032\ufff0\001\002\000" +
    "\004\010\031\001\002\000\004\011\032\001\002\000\004" +
    "\012\033\001\002\000\022\020\045\021\044\022\035\023" +
    "\041\024\047\026\037\027\034\030\042\001\002\000\004" +
    "\012\133\001\002\000\004\012\124\001\002\000\006\004" +
    "\uffec\025\uffec\001\002\000\004\012\115\001\002\000\006" +
    "\004\uffe7\025\uffe7\001\002\000\004\012\106\001\002\000" +
    "\004\012\077\001\002\000\006\004\uffe8\025\uffe8\001\002" +
    "\000\004\012\070\001\002\000\004\012\061\001\002\000" +
    "\006\004\uffe6\025\uffe6\001\002\000\004\012\052\001\002" +
    "\000\006\004\uffed\025\uffed\001\002\000\006\004\uffe5\025" +
    "\uffe5\001\002\000\004\005\053\001\002\000\004\037\054" +
    "\001\002\000\004\004\055\001\002\000\004\006\056\001" +
    "\002\000\004\017\057\001\002\000\004\005\060\001\002" +
    "\000\006\004\uffe2\025\uffe2\001\002\000\004\005\062\001" +
    "\002\000\004\036\063\001\002\000\004\004\064\001\002" +
    "\000\004\006\065\001\002\000\004\017\066\001\002\000" +
    "\004\005\067\001\002\000\006\004\uffe4\025\uffe4\001\002" +
    "\000\004\005\071\001\002\000\004\036\072\001\002\000" +
    "\004\004\073\001\002\000\004\006\074\001\002\000\004" +
    "\017\075\001\002\000\004\005\076\001\002\000\006\004" +
    "\uffe3\025\uffe3\001\002\000\004\005\100\001\002\000\004" +
    "\036\101\001\002\000\004\004\102\001\002\000\004\006" +
    "\103\001\002\000\004\017\104\001\002\000\004\005\105" +
    "\001\002\000\006\004\uffe9\025\uffe9\001\002\000\004\005" +
    "\107\001\002\000\004\036\110\001\002\000\004\004\111" +
    "\001\002\000\004\006\112\001\002\000\004\017\113\001" +
    "\002\000\004\005\114\001\002\000\006\004\uffe0\025\uffe0" +
    "\001\002\000\004\005\116\001\002\000\004\035\117\001" +
    "\002\000\004\004\120\001\002\000\004\006\121\001\002" +
    "\000\004\017\122\001\002\000\004\005\123\001\002\000" +
    "\006\004\uffeb\025\uffeb\001\002\000\004\005\125\001\002" +
    "\000\004\037\126\001\002\000\004\004\127\001\002\000" +
    "\004\006\130\001\002\000\004\017\131\001\002\000\004" +
    "\005\132\001\002\000\006\004\uffe1\025\uffe1\001\002\000" +
    "\004\005\134\001\002\000\004\036\135\001\002\000\004" +
    "\004\136\001\002\000\004\006\137\001\002\000\004\017" +
    "\140\001\002\000\004\005\141\001\002\000\006\004\uffea" +
    "\025\uffea\001\002\000\004\025\uffef\001\002\000\004\004" +
    "\153\001\002\000\004\004\uffde\001\002\000\004\004\146" +
    "\001\002\000\004\006\147\001\002\000\004\007\150\001" +
    "\002\000\004\005\151\001\002\000\006\002\ufffc\004\ufffc" +
    "\001\002\000\004\034\165\001\002\000\004\031\154\001" +
    "\002\000\004\033\155\001\002\000\004\011\156\001\002" +
    "\000\004\012\157\001\002\000\004\040\160\001\002\000" +
    "\004\012\161\001\002\000\004\006\162\001\002\000\004" +
    "\005\163\001\002\000\006\004\153\034\uffdc\001\002\000" +
    "\004\034\uffdd\001\002\000\004\004\uffdf\001\002\000\004" +
    "\005\167\001\002\000\004\004\170\001\002\000\004\016" +
    "\176\001\002\000\004\004\172\001\002\000\004\006\173" +
    "\001\002\000\004\007\174\001\002\000\004\005\175\001" +
    "\002\000\006\002\ufffe\004\ufffe\001\002\000\004\005\177" +
    "\001\002\000\004\004\201\001\002\000\004\025\216\001" +
    "\002\000\004\017\204\001\002\000\006\004\201\025\ufff9" +
    "\001\002\000\004\025\ufffa\001\002\000\004\010\205\001" +
    "\002\000\004\011\206\001\002\000\004\012\207\001\002" +
    "\000\014\020\045\021\044\022\035\023\041\024\047\001" +
    "\002\000\006\004\ufff8\025\ufff8\001\002\000\006\004\ufff7" +
    "\025\ufff7\001\002\000\006\004\ufff5\025\ufff5\001\002\000" +
    "\006\004\ufff6\025\ufff6\001\002\000\006\004\ufff4\025\ufff4" +
    "\001\002\000\006\004\ufff3\025\ufff3\001\002\000\004\004" +
    "\ufffb\001\002\000\004\005\220\001\002\000\004\004\222" +
    "\001\002\000\004\004\235\001\002\000\004\016\223\001" +
    "\002\000\004\005\224\001\002\000\004\004\226\001\002" +
    "\000\004\025\234\001\002\000\004\017\227\001\002\000" +
    "\004\010\230\001\002\000\004\011\231\001\002\000\004" +
    "\012\232\001\002\000\004\020\045\001\002\000\004\025" +
    "\ufff1\001\002\000\004\004\ufff2\001\002\000\004\006\236" +
    "\001\002\000\004\007\237\001\002\000\004\005\240\001" +
    "\002\000\006\002\ufffd\004\ufffd\001\002\000\004\007\243" +
    "\001\002\000\004\002\001\001\002\000\004\010\244\001" +
    "\002\000\004\011\245\001\002\000\004\012\246\001\002" +
    "\000\010\013\013\014\012\015\015\001\002\000\006\002" +
    "\uffff\004\uffff\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\245\000\004\002\003\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\003\013\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\010\017\001\001\000\006\014\144\025" +
    "\143\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\011\025\012\023\001\001\000\006\011\141\012\023\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\016\013\047\020\035\021\042\022\037\023\045\024\050" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\015\151\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\015\163\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\004\170\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\006\177\016\201\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\006\202\016\201\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\016\017\207\020\210\021\212\022\211\023" +
    "\213\024\214\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\005\220\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\007\224\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\020\232\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\003\246\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$ParserXML$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$ParserXML$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$ParserXML$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$ParserXML$actions {
  private final ParserXML parser;

  /** Constructor */
  CUP$ParserXML$actions(ParserXML parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$ParserXML$do_action_part00000000(
    int                        CUP$ParserXML$act_num,
    java_cup.runtime.lr_parser CUP$ParserXML$parser,
    java.util.Stack            CUP$ParserXML$stack,
    int                        CUP$ParserXML$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$ParserXML$result;

      /* select the action based on the action number */
      switch (CUP$ParserXML$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= accion EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)).value;
		RESULT = start_val;
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$ParserXML$parser.done_parsing();
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // accion ::= MENOR ACCION NOMBRE IGUAL COMILLA tipo_accion 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("accion",0, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-5)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // accion ::= accion MENOR ACCION NOMBRE IGUAL COMILLA tipo_accion 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("accion",0, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-6)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // tipo_accion ::= CREARSITIO COMILLA MAYOR parametros_crear_sitio MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",1, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // tipo_accion ::= BORRARSITIO COMILLA MAYOR parametros_borrar_sitio MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",1, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // tipo_accion ::= NUEVAPAGINA COMILLA MAYOR parametros_nueva_pagina etiquetas MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",1, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-8)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // parametros_crear_sitio ::= MENOR PARAMETROS MAYOR parametro_lista_crear_sitio PARAMETROSCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_crear_sitio",2, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // parametro_lista_crear_sitio ::= parametro_crear_sitio parametro_lista_crear_sitio 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_crear_sitio",4, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // parametro_lista_crear_sitio ::= parametro_crear_sitio 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_crear_sitio",4, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // parametro_crear_sitio ::= MENOR PARAMETRO NOMBRE IGUAL COMILLA tipo_param_crear_sitio 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_crear_sitio",12, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-5)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // tipo_param_crear_sitio ::= parametro_tipo_id 
            {
              Object RESULT =null;
		int pileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int piright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		Object pi = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		System.out.println("Crear Sitio id: "+pi);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_crear_sitio",13, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // tipo_param_crear_sitio ::= parametro_tipo_usuario_creacion 
            {
              Object RESULT =null;
		int ucleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int ucright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		Object uc = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		System.out.println("Crear Sitio Usuario Cre: "+uc);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_crear_sitio",13, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // tipo_param_crear_sitio ::= parametro_tipo_fecha_creacion 
            {
              Object RESULT =null;
		int fcleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int fcright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		Object fc = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		System.out.println("Crear Sitio Fecha Cre: "+fc);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_crear_sitio",13, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // tipo_param_crear_sitio ::= parametro_tipo_fecha_mod 
            {
              Object RESULT =null;
		int fmleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int fmright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		Object fm = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		System.out.println("Crear Sitio Fecha mod: "+fm);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_crear_sitio",13, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // tipo_param_crear_sitio ::= parametro_tipo_usuario_mod 
            {
              Object RESULT =null;
		int umleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int umright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		Object um = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		System.out.println("Crear Sitio Usuario mod: "+um);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_crear_sitio",13, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // parametros_borrar_sitio ::= MENOR PARAMETROS MAYOR parametro_borrar_sitio PARAMETROSCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_borrar_sitio",3, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // parametro_borrar_sitio ::= MENOR PARAMETRO NOMBRE IGUAL COMILLA parametro_tipo_id 
            {
              Object RESULT =null;
		int pileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int piright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		Object pi = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		System.out.println("Borrar Sitio: "+pi);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_borrar_sitio",5, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-5)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // parametros_nueva_pagina ::= MENOR PARAMETROS MAYOR parametro_lista_nueva_pagina PARAMETROSCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_nueva_pagina",6, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // parametro_lista_nueva_pagina ::= parametro_nueva_pagina parametro_lista_nueva_pagina 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_nueva_pagina",7, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // parametro_lista_nueva_pagina ::= parametro_nueva_pagina 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_nueva_pagina",7, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // parametro_nueva_pagina ::= MENOR PARAMETRO NOMBRE IGUAL COMILLA tipo_param_nueva_pagina 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_nueva_pagina",8, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-5)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // tipo_param_nueva_pagina ::= parametro_tipo_id 
            {
              Object RESULT =null;
		int pileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int piright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		Object pi = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		System.out.println("Crear pagina id: "+pi);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",9, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // tipo_param_nueva_pagina ::= TITULO COMILLA MAYOR LITERAL MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int lileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String li = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		System.out.println("Crear pagina titulo: "+li);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",9, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // tipo_param_nueva_pagina ::= SITIO COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		System.out.println("Crear pagina sitio: "+id);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",9, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // tipo_param_nueva_pagina ::= PADRE COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int paleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int paright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String pa = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		System.out.println("Crear pagina padre: "+pa);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",9, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // tipo_param_nueva_pagina ::= parametro_tipo_usuario_creacion 
            {
              Object RESULT =null;
		int ucleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int ucright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		Object uc = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		System.out.println("Crear pagina Usuario Cre: "+uc);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",9, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // tipo_param_nueva_pagina ::= parametro_tipo_fecha_creacion 
            {
              Object RESULT =null;
		int fcleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int fcright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		Object fc = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		System.out.println("Crear pag Fecha Cre: "+fc);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",9, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // tipo_param_nueva_pagina ::= parametro_tipo_fecha_mod 
            {
              Object RESULT =null;
		int fmleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int fmright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		Object fm = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		System.out.println("Crear pag Fecha mod: "+fm);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",9, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // tipo_param_nueva_pagina ::= parametro_tipo_usuario_mod 
            {
              Object RESULT =null;
		int umleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int umright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		Object um = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		System.out.println("Crear pag Usuario mod: "+um);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",9, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // parametro_tipo_id ::= IDPARAM COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		RESULT = i; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_tipo_id",14, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // parametro_tipo_usuario_creacion ::= USUARIOCREACION COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int cleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String c = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		RESULT = c; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_tipo_usuario_creacion",15, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // parametro_tipo_fecha_creacion ::= FECHACREACION COMILLA MAYOR VALORFECHA MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int fleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int fright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String f = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		RESULT = f; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_tipo_fecha_creacion",16, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // parametro_tipo_fecha_mod ::= FECHAMODIFICACION COMILLA MAYOR VALORFECHA MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int mleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String m = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		RESULT = m; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_tipo_fecha_mod",17, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // parametro_tipo_usuario_mod ::= USUARIOMODIFICACION COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int uleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int uright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String u = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		RESULT = u; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_tipo_usuario_mod",18, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // etiquetas ::= CONTENIDOETIQUETA etiqueta ETIQUETASCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("etiquetas",10, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-2)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // etiquetas ::= empty 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("etiquetas",10, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // etiqueta ::= MENOR ETIQUETA VALORETIQUETA IGUAL COMILLA DATOETIQUETA COMILLA DIAGONAL MAYOR etiqueta 
            {
              Object RESULT =null;
		int et1left = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int et1right = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String et1 = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		System.out.println("Etiqueta: "+et1);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("etiqueta",11, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-9)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // etiqueta ::= MENOR ETIQUETA VALORETIQUETA IGUAL COMILLA DATOETIQUETA COMILLA DIAGONAL MAYOR 
            {
              Object RESULT =null;
		int et2left = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-3)).left;
		int et2right = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-3)).right;
		String et2 = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-3)).value;
		System.out.println("Etiqueta: "+et2);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("etiqueta",11, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-8)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // empty ::= 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("empty",19, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$ParserXML$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$ParserXML$do_action(
    int                        CUP$ParserXML$act_num,
    java_cup.runtime.lr_parser CUP$ParserXML$parser,
    java.util.Stack            CUP$ParserXML$stack,
    int                        CUP$ParserXML$top)
    throws java.lang.Exception
    {
              return CUP$ParserXML$do_action_part00000000(
                               CUP$ParserXML$act_num,
                               CUP$ParserXML$parser,
                               CUP$ParserXML$stack,
                               CUP$ParserXML$top);
    }
}

}
