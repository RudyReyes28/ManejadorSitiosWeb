
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package com.rudyreyes.manejadorweb;

import java_cup.runtime.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class ParserXML extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return ParserXMLSym.class;
}

  /** Default constructor. */
  @Deprecated
  public ParserXML() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public ParserXML(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public ParserXML(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\123\000\002\002\004\000\002\002\010\000\002\002" +
    "\011\000\002\003\012\000\002\003\012\000\002\003\013" +
    "\000\002\003\012\000\002\003\013\000\002\003\013\000" +
    "\002\003\012\000\002\003\013\000\002\004\007\000\002" +
    "\007\004\000\002\007\003\000\002\042\010\000\002\043" +
    "\003\000\002\043\003\000\002\043\003\000\002\043\003" +
    "\000\002\043\003\000\002\005\007\000\002\010\010\000" +
    "\002\011\007\000\002\035\004\000\002\035\003\000\002" +
    "\036\010\000\002\037\003\000\002\037\012\000\002\037" +
    "\012\000\002\037\012\000\002\037\003\000\002\037\003" +
    "\000\002\037\003\000\002\037\003\000\002\006\007\000" +
    "\002\012\010\000\002\013\007\000\002\015\004\000\002" +
    "\015\003\000\002\014\010\000\002\016\003\000\002\016" +
    "\012\000\002\017\007\000\002\030\007\000\002\031\004" +
    "\000\002\031\003\000\002\032\010\000\002\033\003\000" +
    "\002\033\012\000\002\034\007\000\002\020\004\000\002" +
    "\020\003\000\002\021\010\000\002\027\003\000\002\027" +
    "\012\000\002\027\012\000\002\022\003\000\002\022\003" +
    "\000\002\022\003\000\002\022\003\000\002\022\003\000" +
    "\002\044\012\000\002\045\012\000\002\046\012\000\002" +
    "\047\012\000\002\050\012\000\002\040\005\000\002\040" +
    "\003\000\002\041\014\000\002\041\013\000\002\023\007" +
    "\000\002\024\004\000\002\024\003\000\002\025\017\000" +
    "\002\026\003\000\002\026\003\000\002\026\003\000\002" +
    "\026\003\000\002\026\003\000\002\026\003\000\002\026" +
    "\003\000\002\026\003\000\002\051\002" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u014b\000\004\004\005\001\002\000\006\002\u0148\004" +
    "\u0147\001\002\000\004\007\006\001\002\000\004\010\007" +
    "\001\002\000\004\011\010\001\002\000\004\012\011\001" +
    "\002\000\022\013\012\014\017\015\015\020\013\027\022" +
    "\057\021\061\014\062\020\001\002\000\004\012\u012e\001" +
    "\002\000\004\012\u011c\001\002\000\004\012\377\001\002" +
    "\000\004\012\255\001\002\000\006\002\000\004\000\001" +
    "\002\000\004\012\233\001\002\000\004\012\216\001\002" +
    "\000\004\012\107\001\002\000\004\012\023\001\002\000" +
    "\004\005\024\001\002\000\004\004\026\001\002\000\006" +
    "\004\uffaf\047\064\001\002\000\004\016\027\001\002\000" +
    "\004\005\030\001\002\000\004\004\032\001\002\000\004" +
    "\026\063\001\002\000\004\017\035\001\002\000\006\004" +
    "\032\026\uffdb\001\002\000\004\026\uffdc\001\002\000\004" +
    "\010\036\001\002\000\004\011\037\001\002\000\004\012" +
    "\040\001\002\000\006\021\044\044\041\001\002\000\004" +
    "\012\054\001\002\000\006\004\uffda\026\uffda\001\002\000" +
    "\006\004\uffd9\026\uffd9\001\002\000\004\012\045\001\002" +
    "\000\004\005\046\001\002\000\004\064\047\001\002\000" +
    "\004\004\050\001\002\000\004\006\051\001\002\000\004" +
    "\017\052\001\002\000\004\005\053\001\002\000\006\004" +
    "\uffc4\026\uffc4\001\002\000\004\005\055\001\002\000\004" +
    "\063\056\001\002\000\004\004\057\001\002\000\004\006" +
    "\060\001\002\000\004\017\061\001\002\000\004\005\062" +
    "\001\002\000\006\004\uffd8\026\uffd8\001\002\000\006\004" +
    "\uffdd\047\uffdd\001\002\000\004\004\074\001\002\000\004" +
    "\004\uffbe\001\002\000\004\004\067\001\002\000\004\006" +
    "\070\001\002\000\004\007\071\001\002\000\004\005\072" +
    "\001\002\000\006\002\ufffa\004\ufffa\001\002\000\004\051" +
    "\106\001\002\000\004\046\075\001\002\000\004\050\076" +
    "\001\002\000\004\011\077\001\002\000\004\012\100\001" +
    "\002\000\004\066\101\001\002\000\004\012\102\001\002" +
    "\000\004\006\103\001\002\000\004\005\104\001\002\000" +
    "\006\004\074\051\uffbc\001\002\000\004\051\uffbd\001\002" +
    "\000\004\004\uffbf\001\002\000\004\005\110\001\002\000" +
    "\004\004\111\001\002\000\004\016\154\001\002\000\004" +
    "\004\114\001\002\000\004\004\150\001\002\000\004\032" +
    "\115\001\002\000\004\005\116\001\002\000\004\004\121" +
    "\001\002\000\004\034\147\001\002\000\006\004\121\034" +
    "\uffb9\001\002\000\004\033\122\001\002\000\004\010\123" +
    "\001\002\000\004\011\124\001\002\000\004\012\125\001" +
    "\002\000\022\035\131\036\126\037\130\040\133\041\127" +
    "\042\132\043\136\060\135\001\002\000\004\012\uffb5\001" +
    "\002\000\004\012\uffb2\001\002\000\004\012\uffb4\001\002" +
    "\000\004\012\uffb7\001\002\000\004\012\uffb1\001\002\000" +
    "\004\012\uffb3\001\002\000\004\012\137\001\002\000\004" +
    "\012\uffb6\001\002\000\004\012\uffb0\001\002\000\004\005" +
    "\140\001\002\000\004\063\141\001\002\000\004\004\142" +
    "\001\002\000\004\006\143\001\002\000\004\033\144\001" +
    "\002\000\004\005\145\001\002\000\006\004\uffb8\034\uffb8" +
    "\001\002\000\004\034\uffba\001\002\000\004\004\uffbb\001" +
    "\002\000\004\006\151\001\002\000\004\007\152\001\002" +
    "\000\004\005\153\001\002\000\006\002\ufff9\004\ufff9\001" +
    "\002\000\004\005\155\001\002\000\004\004\160\001\002" +
    "\000\004\026\215\001\002\000\006\004\160\026\uffce\001" +
    "\002\000\004\017\161\001\002\000\004\010\162\001\002" +
    "\000\004\011\163\001\002\000\004\012\164\001\002\000" +
    "\010\021\044\030\167\031\170\001\002\000\006\004\uffcd" +
    "\026\uffcd\001\002\000\006\004\uffcc\026\uffcc\001\002\000" +
    "\004\012\205\001\002\000\004\012\171\001\002\000\004" +
    "\005\172\001\002\000\014\052\173\053\200\054\176\055" +
    "\177\056\175\001\002\000\004\004\uffc9\001\002\000\004" +
    "\004\201\001\002\000\004\004\uffc5\001\002\000\004\004" +
    "\uffc7\001\002\000\004\004\uffc6\001\002\000\004\004\uffc8" +
    "\001\002\000\004\006\202\001\002\000\004\017\203\001" +
    "\002\000\004\005\204\001\002\000\006\004\uffca\026\uffca" +
    "\001\002\000\004\005\206\001\002\000\004\064\207\001" +
    "\002\000\004\004\210\001\002\000\004\006\211\001\002" +
    "\000\004\017\212\001\002\000\004\005\213\001\002\000" +
    "\006\004\uffcb\026\uffcb\001\002\000\004\026\uffcf\001\002" +
    "\000\004\004\uffd7\001\002\000\004\005\217\001\002\000" +
    "\004\004\221\001\002\000\004\004\114\001\002\000\004" +
    "\016\222\001\002\000\004\005\223\001\002\000\004\004" +
    "\160\001\002\000\004\026\225\001\002\000\004\004\uffd0" +
    "\001\002\000\004\004\227\001\002\000\004\006\230\001" +
    "\002\000\004\007\231\001\002\000\004\005\232\001\002" +
    "\000\006\002\ufff7\004\ufff7\001\002\000\004\005\234\001" +
    "\002\000\004\004\236\001\002\000\004\004\251\001\002" +
    "\000\004\016\237\001\002\000\004\005\240\001\002\000" +
    "\004\004\242\001\002\000\004\026\250\001\002\000\004" +
    "\017\243\001\002\000\004\010\244\001\002\000\004\011" +
    "\245\001\002\000\004\012\246\001\002\000\004\021\044" +
    "\001\002\000\004\026\uffec\001\002\000\004\004\uffed\001" +
    "\002\000\004\006\252\001\002\000\004\007\253\001\002" +
    "\000\004\005\254\001\002\000\006\002\ufffd\004\ufffd\001" +
    "\002\000\004\005\256\001\002\000\004\004\260\001\002" +
    "\000\006\004\uffaf\047\064\001\002\000\004\016\261\001" +
    "\002\000\004\005\262\001\002\000\004\004\264\001\002" +
    "\000\006\004\264\026\uffe9\001\002\000\004\017\267\001" +
    "\002\000\004\026\266\001\002\000\006\004\uffeb\047\uffeb" +
    "\001\002\000\004\010\270\001\002\000\004\011\271\001" +
    "\002\000\004\012\272\001\002\000\022\021\044\022\303" +
    "\023\274\024\300\025\305\042\301\044\275\045\276\001" +
    "\002\000\006\004\uffe7\026\uffe7\001\002\000\004\012\362" +
    "\001\002\000\004\012\353\001\002\000\004\012\344\001" +
    "\002\000\006\004\uffe2\026\uffe2\001\002\000\004\012\335" +
    "\001\002\000\004\012\326\001\002\000\006\004\uffe3\026" +
    "\uffe3\001\002\000\004\012\317\001\002\000\006\004\uffe1" +
    "\026\uffe1\001\002\000\004\012\310\001\002\000\006\004" +
    "\uffe8\026\uffe8\001\002\000\006\004\uffe0\026\uffe0\001\002" +
    "\000\004\005\311\001\002\000\004\065\312\001\002\000" +
    "\004\004\313\001\002\000\004\006\314\001\002\000\004" +
    "\017\315\001\002\000\004\005\316\001\002\000\006\004" +
    "\uffc2\026\uffc2\001\002\000\004\005\320\001\002\000\004" +
    "\064\321\001\002\000\004\004\322\001\002\000\004\006" +
    "\323\001\002\000\004\017\324\001\002\000\004\005\325" +
    "\001\002\000\006\004\uffc3\026\uffc3\001\002\000\004\005" +
    "\327\001\002\000\004\064\330\001\002\000\004\004\331" +
    "\001\002\000\004\006\332\001\002\000\004\017\333\001" +
    "\002\000\004\005\334\001\002\000\006\004\uffe4\026\uffe4" +
    "\001\002\000\004\005\336\001\002\000\004\064\337\001" +
    "\002\000\004\004\340\001\002\000\004\006\341\001\002" +
    "\000\004\017\342\001\002\000\004\005\343\001\002\000" +
    "\006\004\uffc0\026\uffc0\001\002\000\004\005\345\001\002" +
    "\000\004\064\346\001\002\000\004\004\347\001\002\000" +
    "\004\006\350\001\002\000\004\017\351\001\002\000\004" +
    "\005\352\001\002\000\006\004\uffe5\026\uffe5\001\002\000" +
    "\004\005\354\001\002\000\004\063\355\001\002\000\004" +
    "\004\356\001\002\000\004\006\357\001\002\000\004\017" +
    "\360\001\002\000\004\005\361\001\002\000\006\004\uffe6" +
    "\026\uffe6\001\002\000\004\005\363\001\002\000\004\065" +
    "\364\001\002\000\004\004\365\001\002\000\004\006\366" +
    "\001\002\000\004\017\367\001\002\000\004\005\370\001" +
    "\002\000\006\004\uffc1\026\uffc1\001\002\000\004\026\uffea" +
    "\001\002\000\004\004\373\001\002\000\004\006\374\001" +
    "\002\000\004\007\375\001\002\000\004\005\376\001\002" +
    "\000\006\002\ufffc\004\ufffc\001\002\000\004\005\u0100\001" +
    "\002\000\004\004\u0102\001\002\000\004\004\u0118\001\002" +
    "\000\004\016\u0103\001\002\000\004\005\u0104\001\002\000" +
    "\004\004\u0106\001\002\000\004\026\u0117\001\002\000\004" +
    "\017\u0109\001\002\000\006\004\u0106\026\uffd4\001\002\000" +
    "\004\026\uffd5\001\002\000\004\010\u010a\001\002\000\004" +
    "\011\u010b\001\002\000\004\012\u010c\001\002\000\006\021" +
    "\044\030\u010e\001\002\000\006\004\uffd2\026\uffd2\001\002" +
    "\000\004\012\u0110\001\002\000\006\004\uffd3\026\uffd3\001" +
    "\002\000\004\005\u0111\001\002\000\004\064\u0112\001\002" +
    "\000\004\004\u0113\001\002\000\004\006\u0114\001\002\000" +
    "\004\017\u0115\001\002\000\004\005\u0116\001\002\000\006" +
    "\004\uffd1\026\uffd1\001\002\000\004\004\uffd6\001\002\000" +
    "\004\006\u0119\001\002\000\004\007\u011a\001\002\000\004" +
    "\005\u011b\001\002\000\006\002\ufff8\004\ufff8\001\002\000" +
    "\004\005\u011d\001\002\000\004\004\u011e\001\002\000\004" +
    "\016\u0124\001\002\000\004\004\u0120\001\002\000\004\006" +
    "\u0121\001\002\000\004\007\u0122\001\002\000\004\005\u0123" +
    "\001\002\000\006\002\ufffb\004\ufffb\001\002\000\004\005" +
    "\u0125\001\002\000\004\004\u0127\001\002\000\004\026\u012d" +
    "\001\002\000\004\017\u0128\001\002\000\004\010\u0129\001" +
    "\002\000\004\011\u012a\001\002\000\004\012\u012b\001\002" +
    "\000\004\021\044\001\002\000\004\026\uffde\001\002\000" +
    "\004\004\uffdf\001\002\000\004\005\u012f\001\002\000\004" +
    "\004\u0130\001\002\000\004\016\u0136\001\002\000\004\004" +
    "\u0132\001\002\000\004\006\u0133\001\002\000\004\007\u0134" +
    "\001\002\000\004\005\u0135\001\002\000\006\002\ufffe\004" +
    "\ufffe\001\002\000\004\005\u0137\001\002\000\004\004\u0139" +
    "\001\002\000\004\026\u0146\001\002\000\004\017\u013c\001" +
    "\002\000\006\004\u0139\026\ufff4\001\002\000\004\026\ufff5" +
    "\001\002\000\004\010\u013d\001\002\000\004\011\u013e\001" +
    "\002\000\004\012\u013f\001\002\000\014\021\044\022\303" +
    "\023\274\024\300\025\305\001\002\000\006\004\ufff3\026" +
    "\ufff3\001\002\000\006\004\ufff2\026\ufff2\001\002\000\006" +
    "\004\ufff0\026\ufff0\001\002\000\006\004\ufff1\026\ufff1\001" +
    "\002\000\006\004\uffef\026\uffef\001\002\000\006\004\uffee" +
    "\026\uffee\001\002\000\004\004\ufff6\001\002\000\004\007" +
    "\u0149\001\002\000\004\002\001\001\002\000\004\010\u014a" +
    "\001\002\000\004\011\u014b\001\002\000\004\012\u014c\001" +
    "\002\000\022\013\012\014\017\015\015\020\013\027\022" +
    "\057\021\061\014\062\020\001\002\000\006\002\uffff\004" +
    "\uffff\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u014b\000\004\002\003\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\003\015\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\013\024" +
    "\001\001\000\006\040\065\051\064\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\014\032\015\030\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\014\032\015" +
    "\033\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\016\041\044\042\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\041\072\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\041\104\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\017\111\001\001\000\002" +
    "\001\001\000\004\023\112\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\024\116\025\117" +
    "\001\001\000\002\001\001\000\006\024\145\025\117\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\026\133\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\020\155\021\156\001\001\000\002\001\001\000\006\020" +
    "\213\021\156\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\027\164\044" +
    "\165\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\022" +
    "\173\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\034\217\001\001\000\004" +
    "\023\225\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\020\223\021\156\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\005\234\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\010\240\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\044\246\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\011\256\001\001\000\006\040\371\051\064\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\035\264" +
    "\036\262\001\001\000\006\035\370\036\262\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\016\037" +
    "\305\044\272\045\301\046\276\047\303\050\306\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\030\u0100\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\031\u0104\032" +
    "\u0106\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\031\u0107\032\u0106\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\033\u010e" +
    "\044\u010c\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\006\u011e\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\012\u0125\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\044\u012b\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\004\u0130\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\007\u0137\042\u0139\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\007\u013a\042\u0139\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\016\043\u013f\044\u0140\045\u0142\046\u0141\047\u0143\050\u0144" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\003\u014c\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$ParserXML$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$ParserXML$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$ParserXML$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$ParserXML$actions {
  private final ParserXML parser;

  /** Constructor */
  CUP$ParserXML$actions(ParserXML parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$ParserXML$do_action_part00000000(
    int                        CUP$ParserXML$act_num,
    java_cup.runtime.lr_parser CUP$ParserXML$parser,
    java.util.Stack            CUP$ParserXML$stack,
    int                        CUP$ParserXML$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$ParserXML$result;

      /* select the action based on the action number */
      switch (CUP$ParserXML$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= accion EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)).value;
		RESULT = start_val;
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$ParserXML$parser.done_parsing();
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // accion ::= MENOR ACCION NOMBRE IGUAL COMILLA tipo_accion 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("accion",0, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-5)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // accion ::= accion MENOR ACCION NOMBRE IGUAL COMILLA tipo_accion 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("accion",0, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-6)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // tipo_accion ::= CREARSITIO COMILLA MAYOR parametros_crear_sitio MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",1, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // tipo_accion ::= BORRARSITIO COMILLA MAYOR parametros_borrar_sitio MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",1, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // tipo_accion ::= NUEVAPAGINA COMILLA MAYOR parametros_nueva_pagina etiquetas MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",1, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-8)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // tipo_accion ::= BORRARPAGINA COMILLA MAYOR parametros_borrar_pagina MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",1, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // tipo_accion ::= MODIFICARPAGINA COMILLA MAYOR parametros_modificar_pagina etiquetas MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",1, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-8)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // tipo_accion ::= AGREGARCOMPONENTE COMILLA MAYOR parametros_agregar_componente atributos MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",1, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-8)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // tipo_accion ::= ELIMINARCOMPONENTE COMILLA MAYOR parametros_eliminar_componente MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",1, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // tipo_accion ::= MODIFICARCOMPONENTE COMILLA MAYOR parametros_modificar_componente atributos MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",1, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-8)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // parametros_crear_sitio ::= MENOR PARAMETROS MAYOR parametro_lista_crear_sitio PARAMETROSCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_crear_sitio",2, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // parametro_lista_crear_sitio ::= parametro_crear_sitio parametro_lista_crear_sitio 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_crear_sitio",5, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // parametro_lista_crear_sitio ::= parametro_crear_sitio 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_crear_sitio",5, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // parametro_crear_sitio ::= MENOR PARAMETRO NOMBRE IGUAL COMILLA tipo_param_crear_sitio 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_crear_sitio",32, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-5)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // tipo_param_crear_sitio ::= parametro_tipo_id 
            {
              Object RESULT =null;
		int pileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int piright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		Object pi = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		System.out.println("Crear Sitio id: "+pi);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_crear_sitio",33, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // tipo_param_crear_sitio ::= parametro_tipo_usuario_creacion 
            {
              Object RESULT =null;
		int ucleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int ucright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		Object uc = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		System.out.println("Crear Sitio Usuario Cre: "+uc);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_crear_sitio",33, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // tipo_param_crear_sitio ::= parametro_tipo_fecha_creacion 
            {
              Object RESULT =null;
		int fcleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int fcright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		Object fc = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		System.out.println("Crear Sitio Fecha Cre: "+fc);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_crear_sitio",33, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // tipo_param_crear_sitio ::= parametro_tipo_fecha_mod 
            {
              Object RESULT =null;
		int fmleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int fmright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		Object fm = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		System.out.println("Crear Sitio Fecha mod: "+fm);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_crear_sitio",33, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // tipo_param_crear_sitio ::= parametro_tipo_usuario_mod 
            {
              Object RESULT =null;
		int umleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int umright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		Object um = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		System.out.println("Crear Sitio Usuario mod: "+um);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_crear_sitio",33, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // parametros_borrar_sitio ::= MENOR PARAMETROS MAYOR parametro_borrar_sitio PARAMETROSCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_borrar_sitio",3, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // parametro_borrar_sitio ::= MENOR PARAMETRO NOMBRE IGUAL COMILLA parametro_tipo_id 
            {
              Object RESULT =null;
		int pileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int piright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		Object pi = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		System.out.println("Borrar Sitio: "+pi);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_borrar_sitio",6, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-5)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // parametros_nueva_pagina ::= MENOR PARAMETROS MAYOR parametro_lista_nueva_pagina PARAMETROSCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_nueva_pagina",7, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // parametro_lista_nueva_pagina ::= parametro_nueva_pagina parametro_lista_nueva_pagina 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_nueva_pagina",27, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // parametro_lista_nueva_pagina ::= parametro_nueva_pagina 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_nueva_pagina",27, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // parametro_nueva_pagina ::= MENOR PARAMETRO NOMBRE IGUAL COMILLA tipo_param_nueva_pagina 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_nueva_pagina",28, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-5)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // tipo_param_nueva_pagina ::= parametro_tipo_id 
            {
              Object RESULT =null;
		int pileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int piright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		Object pi = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		System.out.println("Crear pagina id: "+pi);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",29, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // tipo_param_nueva_pagina ::= TITULO COMILLA MAYOR LITERAL MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int lileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String li = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		System.out.println("Crear pagina titulo: "+li);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",29, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // tipo_param_nueva_pagina ::= SITIO COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		System.out.println("Crear pagina sitio: "+id);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",29, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // tipo_param_nueva_pagina ::= PADRE COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int paleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int paright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String pa = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		System.out.println("Crear pagina padre: "+pa);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",29, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // tipo_param_nueva_pagina ::= parametro_tipo_usuario_creacion 
            {
              Object RESULT =null;
		int ucleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int ucright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		Object uc = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		System.out.println("Crear pagina Usuario Cre: "+uc);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",29, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // tipo_param_nueva_pagina ::= parametro_tipo_fecha_creacion 
            {
              Object RESULT =null;
		int fcleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int fcright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		Object fc = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		System.out.println("Crear pag Fecha Cre: "+fc);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",29, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // tipo_param_nueva_pagina ::= parametro_tipo_fecha_mod 
            {
              Object RESULT =null;
		int fmleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int fmright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		Object fm = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		System.out.println("Crear pag Fecha mod: "+fm);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",29, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // tipo_param_nueva_pagina ::= parametro_tipo_usuario_mod 
            {
              Object RESULT =null;
		int umleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int umright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		Object um = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		System.out.println("Crear pag Usuario mod: "+um);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",29, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // parametros_borrar_pagina ::= MENOR PARAMETROS MAYOR parametro_borrar_pagina PARAMETROSCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_borrar_pagina",4, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // parametro_borrar_pagina ::= MENOR PARAMETRO NOMBRE IGUAL COMILLA parametro_tipo_id 
            {
              Object RESULT =null;
		int pileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int piright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		Object pi = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		System.out.println("Borrar pag: "+pi);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_borrar_pagina",8, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-5)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // parametros_modificar_pagina ::= MENOR PARAMETROS MAYOR parametro_lista_modificar_pagina PARAMETROSCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_modificar_pagina",9, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // parametro_lista_modificar_pagina ::= parametro_modificar_pagina parametro_lista_modificar_pagina 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_modificar_pagina",11, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // parametro_lista_modificar_pagina ::= parametro_modificar_pagina 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_modificar_pagina",11, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // parametro_modificar_pagina ::= MENOR PARAMETRO NOMBRE IGUAL COMILLA tipo_param_modificar_pagina 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_modificar_pagina",10, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-5)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // tipo_param_modificar_pagina ::= parametro_tipo_id 
            {
              Object RESULT =null;
		int pileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int piright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		Object pi = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		System.out.println("Mod pagina id: "+pi);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_modificar_pagina",12, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // tipo_param_modificar_pagina ::= TITULO COMILLA MAYOR LITERAL MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int lileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String li = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		System.out.println("Mod pagina titulo: "+li);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_modificar_pagina",12, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // parametros_agregar_componente ::= MENOR PARAMETROS MAYOR parametro_lista_agregar_co PARAMETROSCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_agregar_componente",13, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // parametros_eliminar_componente ::= MENOR PARAMETROS MAYOR parametro_lista_eliminar_co PARAMETROSCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_eliminar_componente",22, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // parametro_lista_eliminar_co ::= parametro_eliminar_co parametro_lista_eliminar_co 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_eliminar_co",23, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // parametro_lista_eliminar_co ::= parametro_eliminar_co 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_eliminar_co",23, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // parametro_eliminar_co ::= MENOR PARAMETRO NOMBRE IGUAL COMILLA tipo_param_eliminar_co 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_eliminar_co",24, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-5)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // tipo_param_eliminar_co ::= parametro_tipo_id 
            {
              Object RESULT =null;
		int icleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int icright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		Object ic = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		System.out.println("Id elim componente: "+ic);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_eliminar_co",25, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // tipo_param_eliminar_co ::= PAGINA COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int pileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int piright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String pi = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		System.out.println("Id pagina del comp a elim: "+pi);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_eliminar_co",25, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // parametros_modificar_componente ::= MENOR PARAMETROS MAYOR parametro_lista_agregar_co PARAMETROSCIERRE 
            {
              Object RESULT =null;
		System.out.println("Para modificar componentes");
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_modificar_componente",26, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // parametro_lista_agregar_co ::= parametro_agregar_co parametro_lista_agregar_co 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_agregar_co",14, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // parametro_lista_agregar_co ::= parametro_agregar_co 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_agregar_co",14, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // parametro_agregar_co ::= MENOR PARAMETRO NOMBRE IGUAL COMILLA tipo_param_agregar_co 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_agregar_co",15, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-5)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // tipo_param_agregar_co ::= parametro_tipo_id 
            {
              Object RESULT =null;
		int icleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int icright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		Object ic = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		System.out.println("Id componente: "+ic);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_agregar_co",21, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // tipo_param_agregar_co ::= PAGINA COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int pileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int piright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String pi = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		System.out.println("Id pagina: "+pi);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_agregar_co",21, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // tipo_param_agregar_co ::= CLASE COMILLA MAYOR tipo_clase MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int tcleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int tcright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		Object tc = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		System.out.println("Clase comp: "+tc);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_agregar_co",21, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // tipo_clase ::= TITULOC 
            {
              Object RESULT =null;
		RESULT = "TITULO"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_clase",16, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // tipo_clase ::= PARRAFO 
            {
              Object RESULT =null;
		RESULT = "PARRAFO"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_clase",16, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // tipo_clase ::= IMAGEN 
            {
              Object RESULT =null;
		RESULT = "IMAGEN"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_clase",16, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // tipo_clase ::= VIDEO 
            {
              Object RESULT =null;
		RESULT = "VIDEO"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_clase",16, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // tipo_clase ::= MENU 
            {
              Object RESULT =null;
		RESULT = "MENU"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_clase",16, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // parametro_tipo_id ::= IDPARAM COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		RESULT = i; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_tipo_id",34, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // parametro_tipo_usuario_creacion ::= USUARIOCREACION COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int cleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String c = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		RESULT = c; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_tipo_usuario_creacion",35, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // parametro_tipo_fecha_creacion ::= FECHACREACION COMILLA MAYOR VALORFECHA MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int fleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int fright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String f = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		RESULT = f; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_tipo_fecha_creacion",36, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // parametro_tipo_fecha_mod ::= FECHAMODIFICACION COMILLA MAYOR VALORFECHA MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int mleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String m = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		RESULT = m; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_tipo_fecha_mod",37, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // parametro_tipo_usuario_mod ::= USUARIOMODIFICACION COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int uleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int uright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String u = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		RESULT = u; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_tipo_usuario_mod",38, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // etiquetas ::= CONTENIDOETIQUETA etiqueta ETIQUETASCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("etiquetas",30, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-2)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // etiquetas ::= empty 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("etiquetas",30, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // etiqueta ::= MENOR ETIQUETA VALORETIQUETA IGUAL COMILLA DATOETIQUETA COMILLA DIAGONAL MAYOR etiqueta 
            {
              Object RESULT =null;
		int et1left = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int et1right = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String et1 = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		System.out.println("Etiqueta: "+et1);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("etiqueta",31, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-9)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // etiqueta ::= MENOR ETIQUETA VALORETIQUETA IGUAL COMILLA DATOETIQUETA COMILLA DIAGONAL MAYOR 
            {
              Object RESULT =null;
		int et2left = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-3)).left;
		int et2right = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-3)).right;
		String et2 = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-3)).value;
		System.out.println("Etiqueta: "+et2);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("etiqueta",31, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-8)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // atributos ::= MENOR ATRIBUTOS MAYOR atributo_lista ATRIBUTOSCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("atributos",17, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // atributo_lista ::= atributo atributo_lista 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("atributo_lista",18, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // atributo_lista ::= atributo 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("atributo_lista",18, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // atributo ::= MENOR ATRIBUTO NOMBRE IGUAL COMILLA valor_atributo COMILLA MAYOR LITERAL MENOR DIAGONAL ATRIBUTO MAYOR 
            {
              Object RESULT =null;
		int valeft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)).left;
		int varight = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)).right;
		Object va = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)).value;
		int lileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String li = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		System.out.println("Atributos: "+va+" "+li);
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("atributo",19, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-12)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // valor_atributo ::= TEXTO 
            {
              Object RESULT =null;
		RESULT = "TEXTO"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",20, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // valor_atributo ::= ALINEACION 
            {
              Object RESULT =null;
		RESULT = "ALINEACION"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",20, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // valor_atributo ::= COLOR 
            {
              Object RESULT =null;
		RESULT = "COLOR"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",20, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // valor_atributo ::= ORIGEN 
            {
              Object RESULT =null;
		RESULT = "ORIGEN"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",20, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // valor_atributo ::= ALTURA 
            {
              Object RESULT =null;
		RESULT = "ALTURA"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",20, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // valor_atributo ::= ANCHO 
            {
              Object RESULT =null;
		RESULT = "ANCHO"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",20, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // valor_atributo ::= PADRE 
            {
              Object RESULT =null;
		RESULT = "PADRE"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",20, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // valor_atributo ::= ETIQUETAS 
            {
              Object RESULT =null;
		RESULT = "ETIQUETAS"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",20, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // empty ::= 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("empty",39, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$ParserXML$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$ParserXML$do_action(
    int                        CUP$ParserXML$act_num,
    java_cup.runtime.lr_parser CUP$ParserXML$parser,
    java.util.Stack            CUP$ParserXML$stack,
    int                        CUP$ParserXML$top)
    throws java.lang.Exception
    {
              return CUP$ParserXML$do_action_part00000000(
                               CUP$ParserXML$act_num,
                               CUP$ParserXML$parser,
                               CUP$ParserXML$stack,
                               CUP$ParserXML$top);
    }
}

}
