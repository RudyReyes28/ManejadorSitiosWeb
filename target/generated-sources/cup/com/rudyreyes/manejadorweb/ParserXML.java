
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package com.rudyreyes.manejadorweb;

import java.util.ArrayList;
import java.util.List;
import java_cup.runtime.*;
import com.rudyreyes.manejadorweb.modelo.componente.*;
import com.rudyreyes.manejadorweb.modelo.paginaweb.*;
import com.rudyreyes.manejadorweb.modelo.sitioweb.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class ParserXML extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return ParserXMLSym.class;
}

  /** Default constructor. */
  @Deprecated
  public ParserXML() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public ParserXML(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public ParserXML(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\131\000\002\002\004\000\002\002\010\000\002\002" +
    "\011\000\002\003\012\000\002\003\012\000\002\003\013" +
    "\000\002\003\012\000\002\003\013\000\002\003\013\000" +
    "\002\003\012\000\002\003\013\000\002\004\007\000\002" +
    "\007\004\000\002\007\003\000\002\040\010\000\002\041" +
    "\003\000\002\041\003\000\002\041\003\000\002\041\003" +
    "\000\002\041\003\000\002\005\007\000\002\010\010\000" +
    "\002\011\007\000\002\033\004\000\002\033\003\000\002" +
    "\034\010\000\002\035\003\000\002\035\012\000\002\035" +
    "\012\000\002\035\012\000\002\035\003\000\002\035\003" +
    "\000\002\035\003\000\002\035\003\000\002\006\007\000" +
    "\002\012\010\000\002\013\007\000\002\015\004\000\002" +
    "\015\003\000\002\014\010\000\002\016\003\000\002\016" +
    "\012\000\002\016\012\000\002\016\012\000\002\016\003" +
    "\000\002\016\003\000\002\016\003\000\002\016\003\000" +
    "\002\017\007\000\002\026\007\000\002\027\004\000\002" +
    "\027\003\000\002\030\010\000\002\031\003\000\002\031" +
    "\012\000\002\032\007\000\002\020\004\000\002\020\003" +
    "\000\002\021\010\000\002\025\003\000\002\025\012\000" +
    "\002\025\012\000\002\045\003\000\002\045\003\000\002" +
    "\045\003\000\002\045\003\000\002\045\003\000\002\044" +
    "\012\000\002\046\012\000\002\047\012\000\002\050\012" +
    "\000\002\051\012\000\002\036\005\000\002\036\003\000" +
    "\002\037\014\000\002\037\013\000\002\022\007\000\002" +
    "\023\004\000\002\023\003\000\002\024\017\000\002\043" +
    "\003\000\002\043\003\000\002\043\003\000\002\043\003" +
    "\000\002\043\003\000\002\043\003\000\002\043\003\000" +
    "\002\043\003\000\002\042\002" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u015f\000\004\004\005\001\002\000\006\002\u015c\004" +
    "\u015b\001\002\000\004\007\006\001\002\000\004\010\007" +
    "\001\002\000\004\011\010\001\002\000\004\012\011\001" +
    "\002\000\022\013\012\014\017\015\015\020\013\027\022" +
    "\057\021\061\014\062\020\001\002\000\004\012\u0142\001" +
    "\002\000\004\012\u0130\001\002\000\004\012\u0113\001\002" +
    "\000\004\012\341\001\002\000\006\002\000\004\000\001" +
    "\002\000\004\012\317\001\002\000\004\012\302\001\002" +
    "\000\004\012\173\001\002\000\004\012\023\001\002\000" +
    "\004\005\024\001\002\000\004\004\026\001\002\000\006" +
    "\004\uffa9\047\150\001\002\000\004\016\027\001\002\000" +
    "\004\005\030\001\002\000\004\004\032\001\002\000\004" +
    "\026\147\001\002\000\004\017\035\001\002\000\006\004" +
    "\032\026\uffdb\001\002\000\004\026\uffdc\001\002\000\004" +
    "\010\036\001\002\000\004\011\037\001\002\000\004\012" +
    "\040\001\002\000\022\021\053\022\052\023\043\024\047" +
    "\025\055\042\050\044\041\045\042\001\002\000\004\012" +
    "\140\001\002\000\004\012\131\001\002\000\004\012\122" +
    "\001\002\000\006\004\uffd9\026\uffd9\001\002\000\006\004" +
    "\uffda\026\uffda\001\002\000\006\004\uffd4\026\uffd4\001\002" +
    "\000\004\012\113\001\002\000\004\012\104\001\002\000" +
    "\006\004\uffd5\026\uffd5\001\002\000\004\012\075\001\002" +
    "\000\004\012\066\001\002\000\006\004\uffd3\026\uffd3\001" +
    "\002\000\004\012\057\001\002\000\006\004\uffd2\026\uffd2" +
    "\001\002\000\004\005\060\001\002\000\004\065\061\001" +
    "\002\000\004\004\062\001\002\000\004\006\063\001\002" +
    "\000\004\017\064\001\002\000\004\005\065\001\002\000" +
    "\006\004\uffbc\026\uffbc\001\002\000\004\005\067\001\002" +
    "\000\004\064\070\001\002\000\004\004\071\001\002\000" +
    "\004\006\072\001\002\000\004\017\073\001\002\000\004" +
    "\005\074\001\002\000\006\004\uffbe\026\uffbe\001\002\000" +
    "\004\005\076\001\002\000\004\064\077\001\002\000\004" +
    "\004\100\001\002\000\004\006\101\001\002\000\004\017" +
    "\102\001\002\000\004\005\103\001\002\000\006\004\uffbd" +
    "\026\uffbd\001\002\000\004\005\105\001\002\000\004\064" +
    "\106\001\002\000\004\004\107\001\002\000\004\006\110" +
    "\001\002\000\004\017\111\001\002\000\004\005\112\001" +
    "\002\000\006\004\uffd6\026\uffd6\001\002\000\004\005\114" +
    "\001\002\000\004\064\115\001\002\000\004\004\116\001" +
    "\002\000\004\006\117\001\002\000\004\017\120\001\002" +
    "\000\004\005\121\001\002\000\006\004\uffba\026\uffba\001" +
    "\002\000\004\005\123\001\002\000\004\065\124\001\002" +
    "\000\004\004\125\001\002\000\004\006\126\001\002\000" +
    "\004\017\127\001\002\000\004\005\130\001\002\000\006" +
    "\004\uffbb\026\uffbb\001\002\000\004\005\132\001\002\000" +
    "\004\064\133\001\002\000\004\004\134\001\002\000\004" +
    "\006\135\001\002\000\004\017\136\001\002\000\004\005" +
    "\137\001\002\000\006\004\uffd7\026\uffd7\001\002\000\004" +
    "\005\141\001\002\000\004\063\142\001\002\000\004\004" +
    "\143\001\002\000\004\006\144\001\002\000\004\017\145" +
    "\001\002\000\004\005\146\001\002\000\006\004\uffd8\026" +
    "\uffd8\001\002\000\006\004\uffdd\047\uffdd\001\002\000\004" +
    "\004\160\001\002\000\004\004\uffb8\001\002\000\004\004" +
    "\153\001\002\000\004\006\154\001\002\000\004\007\155" +
    "\001\002\000\004\005\156\001\002\000\006\002\ufffa\004" +
    "\ufffa\001\002\000\004\051\172\001\002\000\004\046\161" +
    "\001\002\000\004\050\162\001\002\000\004\011\163\001" +
    "\002\000\004\012\164\001\002\000\004\066\165\001\002" +
    "\000\004\012\166\001\002\000\004\006\167\001\002\000" +
    "\004\005\170\001\002\000\006\004\160\051\uffb6\001\002" +
    "\000\004\051\uffb7\001\002\000\004\004\uffb9\001\002\000" +
    "\004\005\174\001\002\000\004\004\175\001\002\000\004" +
    "\016\240\001\002\000\004\004\200\001\002\000\004\004" +
    "\234\001\002\000\004\032\201\001\002\000\004\005\202" +
    "\001\002\000\004\004\205\001\002\000\004\034\233\001" +
    "\002\000\006\004\205\034\uffb3\001\002\000\004\033\206" +
    "\001\002\000\004\010\207\001\002\000\004\011\210\001" +
    "\002\000\004\012\211\001\002\000\022\035\215\036\212" +
    "\037\214\040\217\041\213\042\216\043\222\060\221\001" +
    "\002\000\004\012\uffaf\001\002\000\004\012\uffac\001\002" +
    "\000\004\012\uffae\001\002\000\004\012\uffb1\001\002\000" +
    "\004\012\uffab\001\002\000\004\012\uffad\001\002\000\004" +
    "\012\223\001\002\000\004\012\uffb0\001\002\000\004\012" +
    "\uffaa\001\002\000\004\005\224\001\002\000\004\063\225" +
    "\001\002\000\004\004\226\001\002\000\004\006\227\001" +
    "\002\000\004\033\230\001\002\000\004\005\231\001\002" +
    "\000\006\004\uffb2\034\uffb2\001\002\000\004\034\uffb4\001" +
    "\002\000\004\004\uffb5\001\002\000\004\006\235\001\002" +
    "\000\004\007\236\001\002\000\004\005\237\001\002\000" +
    "\006\002\ufff9\004\ufff9\001\002\000\004\005\241\001\002" +
    "\000\004\004\244\001\002\000\004\026\301\001\002\000" +
    "\006\004\244\026\uffc8\001\002\000\004\017\245\001\002" +
    "\000\004\010\246\001\002\000\004\011\247\001\002\000" +
    "\004\012\250\001\002\000\010\021\053\030\253\031\254" +
    "\001\002\000\006\004\uffc7\026\uffc7\001\002\000\006\004" +
    "\uffc6\026\uffc6\001\002\000\004\012\271\001\002\000\004" +
    "\012\255\001\002\000\004\005\256\001\002\000\014\052" +
    "\257\053\264\054\262\055\263\056\260\001\002\000\004" +
    "\004\uffc3\001\002\000\004\004\uffbf\001\002\000\004\004" +
    "\265\001\002\000\004\004\uffc1\001\002\000\004\004\uffc0" +
    "\001\002\000\004\004\uffc2\001\002\000\004\006\266\001" +
    "\002\000\004\017\267\001\002\000\004\005\270\001\002" +
    "\000\006\004\uffc4\026\uffc4\001\002\000\004\005\272\001" +
    "\002\000\004\064\273\001\002\000\004\004\274\001\002" +
    "\000\004\006\275\001\002\000\004\017\276\001\002\000" +
    "\004\005\277\001\002\000\006\004\uffc5\026\uffc5\001\002" +
    "\000\004\026\uffc9\001\002\000\004\004\uffd1\001\002\000" +
    "\004\005\303\001\002\000\004\004\305\001\002\000\004" +
    "\004\200\001\002\000\004\016\306\001\002\000\004\005" +
    "\307\001\002\000\004\004\244\001\002\000\004\026\311" +
    "\001\002\000\004\004\uffca\001\002\000\004\004\313\001" +
    "\002\000\004\006\314\001\002\000\004\007\315\001\002" +
    "\000\004\005\316\001\002\000\006\002\ufff7\004\ufff7\001" +
    "\002\000\004\005\320\001\002\000\004\004\322\001\002" +
    "\000\004\004\335\001\002\000\004\016\323\001\002\000" +
    "\004\005\324\001\002\000\004\004\326\001\002\000\004" +
    "\026\334\001\002\000\004\017\327\001\002\000\004\010" +
    "\330\001\002\000\004\011\331\001\002\000\004\012\332" +
    "\001\002\000\004\021\053\001\002\000\004\026\uffec\001" +
    "\002\000\004\004\uffed\001\002\000\004\006\336\001\002" +
    "\000\004\007\337\001\002\000\004\005\340\001\002\000" +
    "\006\002\ufffd\004\ufffd\001\002\000\004\005\342\001\002" +
    "\000\004\004\344\001\002\000\006\004\uffa9\047\150\001" +
    "\002\000\004\016\345\001\002\000\004\005\346\001\002" +
    "\000\004\004\350\001\002\000\006\004\350\026\uffe9\001" +
    "\002\000\004\017\353\001\002\000\004\026\352\001\002" +
    "\000\006\004\uffeb\047\uffeb\001\002\000\004\010\354\001" +
    "\002\000\004\011\355\001\002\000\004\012\356\001\002" +
    "\000\022\021\053\022\052\023\043\024\047\025\055\042" +
    "\363\044\361\045\360\001\002\000\006\004\uffe7\026\uffe7" +
    "\001\002\000\004\012\u0106\001\002\000\004\012\377\001" +
    "\002\000\006\004\uffe2\026\uffe2\001\002\000\004\012\370" +
    "\001\002\000\006\004\uffe3\026\uffe3\001\002\000\006\004" +
    "\uffe1\026\uffe1\001\002\000\006\004\uffe8\026\uffe8\001\002" +
    "\000\006\004\uffe0\026\uffe0\001\002\000\004\005\371\001" +
    "\002\000\004\064\372\001\002\000\004\004\373\001\002" +
    "\000\004\006\374\001\002\000\004\017\375\001\002\000" +
    "\004\005\376\001\002\000\006\004\uffe4\026\uffe4\001\002" +
    "\000\004\005\u0100\001\002\000\004\063\u0101\001\002\000" +
    "\004\004\u0102\001\002\000\004\006\u0103\001\002\000\004" +
    "\017\u0104\001\002\000\004\005\u0105\001\002\000\006\004" +
    "\uffe6\026\uffe6\001\002\000\004\005\u0107\001\002\000\004" +
    "\064\u0108\001\002\000\004\004\u0109\001\002\000\004\006" +
    "\u010a\001\002\000\004\017\u010b\001\002\000\004\005\u010c" +
    "\001\002\000\006\004\uffe5\026\uffe5\001\002\000\004\026" +
    "\uffea\001\002\000\004\004\u010f\001\002\000\004\006\u0110" +
    "\001\002\000\004\007\u0111\001\002\000\004\005\u0112\001" +
    "\002\000\006\002\ufffc\004\ufffc\001\002\000\004\005\u0114" +
    "\001\002\000\004\004\u0116\001\002\000\004\004\u012c\001" +
    "\002\000\004\016\u0117\001\002\000\004\005\u0118\001\002" +
    "\000\004\004\u011a\001\002\000\004\026\u012b\001\002\000" +
    "\004\017\u011d\001\002\000\006\004\u011a\026\uffce\001\002" +
    "\000\004\026\uffcf\001\002\000\004\010\u011e\001\002\000" +
    "\004\011\u011f\001\002\000\004\012\u0120\001\002\000\006" +
    "\021\053\030\u0122\001\002\000\006\004\uffcc\026\uffcc\001" +
    "\002\000\004\012\u0124\001\002\000\006\004\uffcd\026\uffcd" +
    "\001\002\000\004\005\u0125\001\002\000\004\064\u0126\001" +
    "\002\000\004\004\u0127\001\002\000\004\006\u0128\001\002" +
    "\000\004\017\u0129\001\002\000\004\005\u012a\001\002\000" +
    "\006\004\uffcb\026\uffcb\001\002\000\004\004\uffd0\001\002" +
    "\000\004\006\u012d\001\002\000\004\007\u012e\001\002\000" +
    "\004\005\u012f\001\002\000\006\002\ufff8\004\ufff8\001\002" +
    "\000\004\005\u0131\001\002\000\004\004\u0132\001\002\000" +
    "\004\016\u0138\001\002\000\004\004\u0134\001\002\000\004" +
    "\006\u0135\001\002\000\004\007\u0136\001\002\000\004\005" +
    "\u0137\001\002\000\006\002\ufffb\004\ufffb\001\002\000\004" +
    "\005\u0139\001\002\000\004\004\u013b\001\002\000\004\026" +
    "\u0141\001\002\000\004\017\u013c\001\002\000\004\010\u013d" +
    "\001\002\000\004\011\u013e\001\002\000\004\012\u013f\001" +
    "\002\000\004\021\053\001\002\000\004\026\uffde\001\002" +
    "\000\004\004\uffdf\001\002\000\004\005\u0143\001\002\000" +
    "\004\004\u0144\001\002\000\004\016\u014a\001\002\000\004" +
    "\004\u0146\001\002\000\004\006\u0147\001\002\000\004\007" +
    "\u0148\001\002\000\004\005\u0149\001\002\000\006\002\ufffe" +
    "\004\ufffe\001\002\000\004\005\u014b\001\002\000\004\004" +
    "\u014d\001\002\000\004\026\u015a\001\002\000\004\017\u0150" +
    "\001\002\000\006\004\u014d\026\ufff4\001\002\000\004\026" +
    "\ufff5\001\002\000\004\010\u0151\001\002\000\004\011\u0152" +
    "\001\002\000\004\012\u0153\001\002\000\014\021\053\022" +
    "\052\023\043\024\047\025\055\001\002\000\006\004\ufff3" +
    "\026\ufff3\001\002\000\006\004\ufff2\026\ufff2\001\002\000" +
    "\006\004\ufff0\026\ufff0\001\002\000\006\004\ufff1\026\ufff1" +
    "\001\002\000\006\004\uffef\026\uffef\001\002\000\006\004" +
    "\uffee\026\uffee\001\002\000\004\004\ufff6\001\002\000\004" +
    "\007\u015d\001\002\000\004\002\001\001\002\000\004\010" +
    "\u015e\001\002\000\004\011\u015f\001\002\000\004\012\u0160" +
    "\001\002\000\022\013\012\014\017\015\015\020\013\027" +
    "\022\057\021\061\014\062\020\001\002\000\006\002\uffff" +
    "\004\uffff\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u015f\000\004\002\003\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\003\015\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\013\024" +
    "\001\001\000\006\036\151\042\150\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\014\032\015\030\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\014\032\015" +
    "\033\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\016\016\044\044\043\046" +
    "\050\047\045\050\053\051\055\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\037\156\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\037\170\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\017\175\001\001\000\002\001\001\000\004\022" +
    "\176\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\023\202\024\203\001\001\000\002\001" +
    "\001\000\006\023\231\024\203\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\043\217\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\020\241\021\242\001" +
    "\001\000\002\001\001\000\006\020\277\021\242\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\025\250\044\251\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\045\260\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\032\303\001\001\000\004\022\311\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\020\307\021\242" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\005\320\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\010\324\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\044\332\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\011\342\001" +
    "\001\000\006\036\u010d\042\150\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\033\350\034\346\001\001\000" +
    "\006\033\u010c\034\346\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\016\035\365\044\356\046\363" +
    "\047\361\050\364\051\366\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\026\u0114\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\027\u0118\030\u011a\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\027\u011b\030" +
    "\u011a\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\031\u0122\044\u0120\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\006\u0132\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\012\u0139\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\044\u013f\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\004\u0144\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\007\u014b\040" +
    "\u014d\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\007\u014e\040\u014d\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\016\041\u0153" +
    "\044\u0154\046\u0156\047\u0155\050\u0157\051\u0158\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\003\u0160\001" +
    "\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$ParserXML$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$ParserXML$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$ParserXML$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    Componente nuevoComponente = new Componente();
    EliminarComponente elimComponente = new EliminarComponente();
    PaginaWeb nuevaPagina = new PaginaWeb();
    SitioWeb nuevoSitio = new SitioWeb();
    List<Object> listaAcciones = new ArrayList<>();


    public List<Object> obtenerAcciones(){
        return listaAcciones;
    }
    


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$ParserXML$actions {
  private final ParserXML parser;

  /** Constructor */
  CUP$ParserXML$actions(ParserXML parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$ParserXML$do_action_part00000000(
    int                        CUP$ParserXML$act_num,
    java_cup.runtime.lr_parser CUP$ParserXML$parser,
    java.util.Stack            CUP$ParserXML$stack,
    int                        CUP$ParserXML$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$ParserXML$result;

      /* select the action based on the action number */
      switch (CUP$ParserXML$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= accion EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)).value;
		RESULT = start_val;
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$ParserXML$parser.done_parsing();
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // accion ::= MENOR ACCION NOMBRE IGUAL COMILLA tipo_accion 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("accion",0, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-5)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // accion ::= accion MENOR ACCION NOMBRE IGUAL COMILLA tipo_accion 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("accion",0, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-6)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // tipo_accion ::= CREARSITIO COMILLA MAYOR parametros_crear_sitio MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;
		
                    SitioWeb enviarSitio = new SitioWeb();
                    enviarSitio.setIdSitioSinCorchetes(nuevoSitio.getIdSitio());
                    enviarSitio.setUsuarioCreacionSinCorchetes(nuevoSitio.getUsuarioCreacion());
                    enviarSitio.setFechaCreacionSinCorchetes(nuevoSitio.getFechaCreacion());
                    enviarSitio.setFechaModificacionSinCorchetes(nuevoSitio.getFechaModificacion());
                    enviarSitio.setUsuarioModificacionSinCorchetes(nuevoSitio.getUsuarioModificacion());
				
				
                    listaAcciones.add(enviarSitio);
				
                    nuevoSitio = new SitioWeb();
	
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",1, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // tipo_accion ::= BORRARSITIO COMILLA MAYOR parametros_borrar_sitio MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;
		
		BorrarSitioWeb enviarBorrarSitio = new BorrarSitioWeb(nuevoSitio.getIdSitio());
		listaAcciones.add(enviarBorrarSitio);
				
		nuevoSitio = new SitioWeb();
				
		
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",1, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // tipo_accion ::= NUEVAPAGINA COMILLA MAYOR parametros_nueva_pagina etiquetas MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;
		
		PaginaWeb enviarPagina = new PaginaWeb();
		enviarPagina.setIdPaginaSinCorchetes(nuevaPagina.getIdPagina());
		enviarPagina.setTituloSinCorchetes(nuevaPagina.getTitulo());
		enviarPagina.setSitioSinCorchetes(nuevaPagina.getSitio());
		enviarPagina.setIdPadreCorchetes(nuevaPagina.getIdPadre());
		enviarPagina.setUsuarioCreacionSinCorchetes(nuevaPagina.getUsuarioCreacion());
		enviarPagina.setFechaCreacionSinCorchetes(nuevaPagina.getFechaCreacion());
		enviarPagina.setFechaModificacionSinCorchetes(nuevaPagina.getFechaModificacion());
		enviarPagina.setUsuarioModificacionSinCorchetes(nuevaPagina.getUsuarioModificacion());
				
		List<String> listaEtiquetas = new ArrayList<>(nuevaPagina.getEtiquetas());
		enviarPagina.setEtiquetas(listaEtiquetas);
		listaAcciones.add(enviarPagina);
				
		nuevaPagina = new PaginaWeb();
			
		
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",1, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-8)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // tipo_accion ::= BORRARPAGINA COMILLA MAYOR parametros_borrar_pagina MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;
		
		BorrarPaginaWeb enviarBorrarPagina = new BorrarPaginaWeb(nuevaPagina.getIdPagina());
		listaAcciones.add(enviarBorrarPagina);
				
		nuevaPagina = new PaginaWeb();
				
		
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",1, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // tipo_accion ::= MODIFICARPAGINA COMILLA MAYOR parametros_modificar_pagina etiquetas MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;
		
		ModificarPagina enviarPaginaMod = new ModificarPagina();
		enviarPaginaMod.setIdPaginaSinCorchetes(nuevaPagina.getIdPagina());
		enviarPaginaMod.setTituloSinCorchetes(nuevaPagina.getTitulo());
		enviarPaginaMod.setSitioSinCorchetes(nuevaPagina.getSitio());
		enviarPaginaMod.setIdPadreCorchetes(nuevaPagina.getIdPadre());
		enviarPaginaMod.setUsuarioCreacionSinCorchetes(nuevaPagina.getUsuarioCreacion());
		enviarPaginaMod.setFechaCreacionSinCorchetes(nuevaPagina.getFechaCreacion());
		enviarPaginaMod.setFechaModificacionSinCorchetes(nuevaPagina.getFechaModificacion());
		enviarPaginaMod.setUsuarioModificacionSinCorchetes(nuevaPagina.getUsuarioModificacion());
				
		List<String> listaEtiquetas = new ArrayList<>(nuevaPagina.getEtiquetas());
		enviarPaginaMod.setEtiquetas(listaEtiquetas);
		listaAcciones.add(enviarPaginaMod);
				
		nuevaPagina = new PaginaWeb();
			
		
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",1, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-8)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // tipo_accion ::= AGREGARCOMPONENTE COMILLA MAYOR parametros_agregar_componente atributos MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;
		
		Componente enviarComponente = new Componente();
		enviarComponente.setIdComponenteSinCorchetes(nuevoComponente.getIdComponente());
		enviarComponente.setIdPaginaSinCorchetes(nuevoComponente.getIdPagina());
		enviarComponente.setClaseComponente(nuevoComponente.getClaseComponente());
		List<Atributo> listaAtributos =  new ArrayList<>(nuevoComponente.getListaAtributos());
                enviarComponente.setListaAtributos(listaAtributos);
		listaAcciones.add(enviarComponente);

                nuevoComponente = new Componente();
		
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",1, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-8)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // tipo_accion ::= ELIMINARCOMPONENTE COMILLA MAYOR parametros_eliminar_componente MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;
		
		EliminarComponente componenteElim = new EliminarComponente();
		componenteElim.setIdComponenteSinCorchetes(elimComponente.getIdComponente());
		componenteElim.setIdPaginaSinCorchetes(elimComponente.getIdPagina());
		listaAcciones.add(componenteElim);

                elimComponente = new EliminarComponente();
		
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",1, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // tipo_accion ::= MODIFICARCOMPONENTE COMILLA MAYOR parametros_modificar_componente atributos MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;
		
		ModificarComponentes modComponente = new ModificarComponentes();
			
		modComponente.setIdComponenteSinCorchetes(nuevoComponente.getIdComponente());
		modComponente.setIdPaginaSinCorchetes(nuevoComponente.getIdPagina());
		modComponente.setClaseComponente(nuevoComponente.getClaseComponente());
		List<Atributo> listaAtributos =  new ArrayList<>(nuevoComponente.getListaAtributos());
                modComponente.setListaAtributos(listaAtributos);
		listaAcciones.add(modComponente);

                nuevoComponente = new Componente();
		
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",1, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-8)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // parametros_crear_sitio ::= MENOR PARAMETROS MAYOR parametro_lista_crear_sitio PARAMETROSCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_crear_sitio",2, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // parametro_lista_crear_sitio ::= parametro_crear_sitio parametro_lista_crear_sitio 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_crear_sitio",5, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // parametro_lista_crear_sitio ::= parametro_crear_sitio 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_crear_sitio",5, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // parametro_crear_sitio ::= MENOR PARAMETRO NOMBRE IGUAL COMILLA tipo_param_crear_sitio 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_crear_sitio",30, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-5)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // tipo_param_crear_sitio ::= parametro_tipo_id 
            {
              Object RESULT =null;
		int pileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int piright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String pi = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevoSitio.setIdSitio(pi);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_crear_sitio",31, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // tipo_param_crear_sitio ::= parametro_tipo_usuario_creacion 
            {
              Object RESULT =null;
		int ucleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int ucright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String uc = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevoSitio.setUsuarioCreacion(uc);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_crear_sitio",31, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // tipo_param_crear_sitio ::= parametro_tipo_fecha_creacion 
            {
              Object RESULT =null;
		int fcleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int fcright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String fc = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevoSitio.setFechaCreacion(fc);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_crear_sitio",31, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // tipo_param_crear_sitio ::= parametro_tipo_fecha_mod 
            {
              Object RESULT =null;
		int fmleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int fmright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String fm = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevoSitio.setFechaModificacion(fm);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_crear_sitio",31, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // tipo_param_crear_sitio ::= parametro_tipo_usuario_mod 
            {
              Object RESULT =null;
		int umleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int umright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String um = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevoSitio.setUsuarioModificacion(um);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_crear_sitio",31, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // parametros_borrar_sitio ::= MENOR PARAMETROS MAYOR parametro_borrar_sitio PARAMETROSCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_borrar_sitio",3, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // parametro_borrar_sitio ::= MENOR PARAMETRO NOMBRE IGUAL COMILLA parametro_tipo_id 
            {
              Object RESULT =null;
		int pileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int piright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String pi = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
                        nuevoSitio.setIdSitio(pi);
                        
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_borrar_sitio",6, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-5)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // parametros_nueva_pagina ::= MENOR PARAMETROS MAYOR parametro_lista_nueva_pagina PARAMETROSCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_nueva_pagina",7, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // parametro_lista_nueva_pagina ::= parametro_nueva_pagina parametro_lista_nueva_pagina 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_nueva_pagina",25, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // parametro_lista_nueva_pagina ::= parametro_nueva_pagina 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_nueva_pagina",25, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // parametro_nueva_pagina ::= MENOR PARAMETRO NOMBRE IGUAL COMILLA tipo_param_nueva_pagina 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_nueva_pagina",26, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-5)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // tipo_param_nueva_pagina ::= parametro_tipo_id 
            {
              Object RESULT =null;
		int pileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int piright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String pi = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevaPagina.setIdPagina(pi);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",27, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // tipo_param_nueva_pagina ::= TITULO COMILLA MAYOR LITERAL MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int lileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String li = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		
				nuevaPagina.setTitulo(li);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",27, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // tipo_param_nueva_pagina ::= SITIO COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		
				nuevaPagina.setSitio(id);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",27, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // tipo_param_nueva_pagina ::= PADRE COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int paleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int paright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String pa = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		
				nuevaPagina.setIdPadre(pa);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",27, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // tipo_param_nueva_pagina ::= parametro_tipo_usuario_creacion 
            {
              Object RESULT =null;
		int ucleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int ucright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String uc = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevaPagina.setUsuarioCreacion(uc);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",27, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // tipo_param_nueva_pagina ::= parametro_tipo_fecha_creacion 
            {
              Object RESULT =null;
		int fcleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int fcright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String fc = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevaPagina.setFechaCreacion(fc);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",27, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // tipo_param_nueva_pagina ::= parametro_tipo_fecha_mod 
            {
              Object RESULT =null;
		int fmleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int fmright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String fm = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevaPagina.setFechaModificacion(fm);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",27, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // tipo_param_nueva_pagina ::= parametro_tipo_usuario_mod 
            {
              Object RESULT =null;
		int umleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int umright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String um = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevaPagina.setUsuarioModificacion(um);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",27, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // parametros_borrar_pagina ::= MENOR PARAMETROS MAYOR parametro_borrar_pagina PARAMETROSCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_borrar_pagina",4, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // parametro_borrar_pagina ::= MENOR PARAMETRO NOMBRE IGUAL COMILLA parametro_tipo_id 
            {
              Object RESULT =null;
		int pileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int piright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String pi = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
	nuevaPagina.setIdPagina(pi);

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_borrar_pagina",8, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-5)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // parametros_modificar_pagina ::= MENOR PARAMETROS MAYOR parametro_lista_modificar_pagina PARAMETROSCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_modificar_pagina",9, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // parametro_lista_modificar_pagina ::= parametro_modificar_pagina parametro_lista_modificar_pagina 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_modificar_pagina",11, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // parametro_lista_modificar_pagina ::= parametro_modificar_pagina 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_modificar_pagina",11, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // parametro_modificar_pagina ::= MENOR PARAMETRO NOMBRE IGUAL COMILLA tipo_param_modificar_pagina 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_modificar_pagina",10, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-5)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // tipo_param_modificar_pagina ::= parametro_tipo_id 
            {
              Object RESULT =null;
		int pileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int piright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String pi = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevaPagina.setIdPagina(pi);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_modificar_pagina",12, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // tipo_param_modificar_pagina ::= TITULO COMILLA MAYOR LITERAL MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int lileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String li = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		
				nuevaPagina.setTitulo(li);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_modificar_pagina",12, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // tipo_param_modificar_pagina ::= SITIO COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		
				nuevaPagina.setSitio(id);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_modificar_pagina",12, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // tipo_param_modificar_pagina ::= PADRE COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int paleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int paright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String pa = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		
				nuevaPagina.setIdPadre(pa);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_modificar_pagina",12, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // tipo_param_modificar_pagina ::= parametro_tipo_usuario_creacion 
            {
              Object RESULT =null;
		int ucleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int ucright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String uc = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevaPagina.setUsuarioCreacion(uc);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_modificar_pagina",12, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // tipo_param_modificar_pagina ::= parametro_tipo_fecha_creacion 
            {
              Object RESULT =null;
		int fcleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int fcright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String fc = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevaPagina.setFechaCreacion(fc);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_modificar_pagina",12, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // tipo_param_modificar_pagina ::= parametro_tipo_fecha_mod 
            {
              Object RESULT =null;
		int fmleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int fmright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String fm = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevaPagina.setFechaModificacion(fm);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_modificar_pagina",12, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // tipo_param_modificar_pagina ::= parametro_tipo_usuario_mod 
            {
              Object RESULT =null;
		int umleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int umright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String um = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevaPagina.setUsuarioModificacion(um);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_modificar_pagina",12, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // parametros_agregar_componente ::= MENOR PARAMETROS MAYOR parametro_lista_agregar_co PARAMETROSCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_agregar_componente",13, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // parametros_eliminar_componente ::= MENOR PARAMETROS MAYOR parametro_lista_eliminar_co PARAMETROSCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_eliminar_componente",20, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // parametro_lista_eliminar_co ::= parametro_eliminar_co parametro_lista_eliminar_co 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_eliminar_co",21, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // parametro_lista_eliminar_co ::= parametro_eliminar_co 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_eliminar_co",21, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // parametro_eliminar_co ::= MENOR PARAMETRO NOMBRE IGUAL COMILLA tipo_param_eliminar_co 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_eliminar_co",22, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-5)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // tipo_param_eliminar_co ::= parametro_tipo_id 
            {
              Object RESULT =null;
		int icleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int icright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String ic = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
                            elimComponente.setIdComponente(ic);
                            
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_eliminar_co",23, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // tipo_param_eliminar_co ::= PAGINA COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int pileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int piright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String pi = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		
                            elimComponente.setIdPagina(pi);
                            
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_eliminar_co",23, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // parametros_modificar_componente ::= MENOR PARAMETROS MAYOR parametro_lista_agregar_co PARAMETROSCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_modificar_componente",24, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // parametro_lista_agregar_co ::= parametro_agregar_co parametro_lista_agregar_co 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_agregar_co",14, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // parametro_lista_agregar_co ::= parametro_agregar_co 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_agregar_co",14, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // parametro_agregar_co ::= MENOR PARAMETRO NOMBRE IGUAL COMILLA tipo_param_agregar_co 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_agregar_co",15, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-5)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // tipo_param_agregar_co ::= parametro_tipo_id 
            {
              Object RESULT =null;
		int icleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int icright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String ic = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevoComponente.setIdComponente(ic);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_agregar_co",19, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // tipo_param_agregar_co ::= PAGINA COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int pileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int piright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String pi = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		
				nuevoComponente.setIdPagina(pi);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_agregar_co",19, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // tipo_param_agregar_co ::= CLASE COMILLA MAYOR tipo_clase MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int tcleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int tcright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String tc = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		
				nuevoComponente.setClaseComponente(tc);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_agregar_co",19, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // tipo_clase ::= TITULOC 
            {
              String RESULT =null;
		RESULT = "TITULO"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_clase",35, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // tipo_clase ::= PARRAFO 
            {
              String RESULT =null;
		RESULT = "PARRAFO"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_clase",35, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // tipo_clase ::= IMAGEN 
            {
              String RESULT =null;
		RESULT = "IMAGEN"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_clase",35, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // tipo_clase ::= VIDEO 
            {
              String RESULT =null;
		RESULT = "VIDEO"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_clase",35, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // tipo_clase ::= MENU 
            {
              String RESULT =null;
		RESULT = "MENU"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_clase",35, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // parametro_tipo_id ::= IDPARAM COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              String RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		RESULT = i; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_tipo_id",34, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // parametro_tipo_usuario_creacion ::= USUARIOCREACION COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              String RESULT =null;
		int cleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String c = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		RESULT = c; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_tipo_usuario_creacion",36, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // parametro_tipo_fecha_creacion ::= FECHACREACION COMILLA MAYOR VALORFECHA MENOR DIAGONAL PARAMETRO MAYOR 
            {
              String RESULT =null;
		int fleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int fright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String f = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		RESULT = f; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_tipo_fecha_creacion",37, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // parametro_tipo_fecha_mod ::= FECHAMODIFICACION COMILLA MAYOR VALORFECHA MENOR DIAGONAL PARAMETRO MAYOR 
            {
              String RESULT =null;
		int mleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String m = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		RESULT = m; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_tipo_fecha_mod",38, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // parametro_tipo_usuario_mod ::= USUARIOMODIFICACION COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              String RESULT =null;
		int uleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int uright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String u = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		RESULT = u; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_tipo_usuario_mod",39, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // etiquetas ::= CONTENIDOETIQUETA etiqueta ETIQUETASCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("etiquetas",28, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-2)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // etiquetas ::= empty 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("etiquetas",28, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // etiqueta ::= MENOR ETIQUETA VALORETIQUETA IGUAL COMILLA DATOETIQUETA COMILLA DIAGONAL MAYOR etiqueta 
            {
              Object RESULT =null;
		int et1left = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int et1right = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String et1 = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		
		nuevaPagina.setEtiqueta(et1);
	
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("etiqueta",29, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-9)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // etiqueta ::= MENOR ETIQUETA VALORETIQUETA IGUAL COMILLA DATOETIQUETA COMILLA DIAGONAL MAYOR 
            {
              Object RESULT =null;
		int et2left = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-3)).left;
		int et2right = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-3)).right;
		String et2 = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-3)).value;
		
		nuevaPagina.setEtiqueta(et2);
	
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("etiqueta",29, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-8)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // atributos ::= MENOR ATRIBUTOS MAYOR atributo_lista ATRIBUTOSCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("atributos",16, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // atributo_lista ::= atributo atributo_lista 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("atributo_lista",17, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // atributo_lista ::= atributo 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("atributo_lista",17, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // atributo ::= MENOR ATRIBUTO NOMBRE IGUAL COMILLA valor_atributo COMILLA MAYOR LITERAL MENOR DIAGONAL ATRIBUTO MAYOR 
            {
              Object RESULT =null;
		int valeft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)).left;
		int varight = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)).right;
		String va = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)).value;
		int lileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String li = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		
	nuevoComponente.setAtributo(new Atributo(va, li));

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("atributo",18, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-12)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // valor_atributo ::= TEXTO 
            {
              String RESULT =null;
		RESULT = "TEXTO"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",33, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // valor_atributo ::= ALINEACION 
            {
              String RESULT =null;
		RESULT = "ALINEACION"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",33, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // valor_atributo ::= COLOR 
            {
              String RESULT =null;
		RESULT = "COLOR"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",33, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // valor_atributo ::= ORIGEN 
            {
              String RESULT =null;
		RESULT = "ORIGEN"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",33, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // valor_atributo ::= ALTURA 
            {
              String RESULT =null;
		RESULT = "ALTURA"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",33, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // valor_atributo ::= ANCHO 
            {
              String RESULT =null;
		RESULT = "ANCHO"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",33, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // valor_atributo ::= PADRE 
            {
              String RESULT =null;
		RESULT = "PADRE"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",33, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // valor_atributo ::= ETIQUETAS 
            {
              String RESULT =null;
		RESULT = "ETIQUETAS"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",33, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // empty ::= 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("empty",32, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$ParserXML$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$ParserXML$do_action(
    int                        CUP$ParserXML$act_num,
    java_cup.runtime.lr_parser CUP$ParserXML$parser,
    java.util.Stack            CUP$ParserXML$stack,
    int                        CUP$ParserXML$top)
    throws java.lang.Exception
    {
              return CUP$ParserXML$do_action_part00000000(
                               CUP$ParserXML$act_num,
                               CUP$ParserXML$parser,
                               CUP$ParserXML$stack,
                               CUP$ParserXML$top);
    }
}

}
