
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package com.rudyreyes.manejadorweb;

import java_cup.runtime.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class ParserXML extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return ParserXMLSym.class;
}

  /** Default constructor. */
  @Deprecated
  public ParserXML() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public ParserXML(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public ParserXML(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\124\000\002\002\004\000\002\002\012\000\002\002" +
    "\003\000\002\003\010\000\002\003\011\000\002\004\012" +
    "\000\002\004\012\000\002\004\013\000\002\004\013\000" +
    "\002\004\013\000\002\004\013\000\002\004\012\000\002" +
    "\004\013\000\002\005\012\000\002\016\003\000\002\016" +
    "\004\000\002\017\011\000\002\020\003\000\002\020\003" +
    "\000\002\020\003\000\002\020\003\000\002\020\003\000" +
    "\002\006\012\000\002\026\011\000\002\007\012\000\002" +
    "\027\003\000\002\027\004\000\002\030\011\000\002\031" +
    "\003\000\002\031\012\000\002\031\012\000\002\031\012" +
    "\000\002\031\003\000\002\031\003\000\002\031\003\000" +
    "\002\031\003\000\002\011\012\000\002\032\011\000\002" +
    "\012\012\000\002\033\003\000\002\033\004\000\002\034" +
    "\011\000\002\035\003\000\002\035\012\000\002\013\012" +
    "\000\002\036\003\000\002\036\004\000\002\037\011\000" +
    "\002\040\003\000\002\040\012\000\002\040\012\000\002" +
    "\041\003\000\002\041\003\000\002\041\003\000\002\041" +
    "\003\000\002\041\003\000\002\015\012\000\002\042\003" +
    "\000\002\042\004\000\002\043\011\000\002\044\003\000" +
    "\002\044\012\000\002\021\012\000\002\022\012\000\002" +
    "\023\012\000\002\024\012\000\002\025\012\000\002\010" +
    "\003\000\002\010\010\000\002\045\013\000\002\045\014" +
    "\000\002\014\012\000\002\047\003\000\002\047\004\000" +
    "\002\046\017\000\002\050\003\000\002\050\003\000\002" +
    "\050\003\000\002\050\003\000\002\050\003\000\002\050" +
    "\003\000\002\050\003\000\002\050\003\000\002\051\002" +
    "" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0179\000\004\004\006\001\002\000\004\002\u017b\001" +
    "\002\000\006\002\uffff\004\u017a\001\002\000\006\005\010" +
    "\010\007\001\002\000\004\011\u0176\001\002\000\004\006" +
    "\011\001\002\000\004\004\013\001\002\000\004\004\014" +
    "\001\002\000\004\010\007\001\002\000\006\007\016\010" +
    "\015\001\002\000\004\011\021\001\002\000\004\005\017" +
    "\001\002\000\004\006\020\001\002\000\004\002\000\001" +
    "\002\000\004\012\022\001\002\000\004\013\023\001\002" +
    "\000\022\014\024\015\031\016\027\017\025\020\034\021" +
    "\033\022\026\023\032\001\002\000\004\013\u0159\001\002" +
    "\000\004\013\u0142\001\002\000\004\013\u0121\001\002\000" +
    "\004\013\313\001\002\000\006\002\ufffd\004\ufffd\001\002" +
    "\000\004\013\265\001\002\000\004\013\255\001\002\000" +
    "\004\013\137\001\002\000\004\013\035\001\002\000\004" +
    "\006\036\001\002\000\004\004\040\001\002\000\006\004" +
    "\uffae\060\102\001\002\000\004\024\041\001\002\000\004" +
    "\006\042\001\002\000\004\004\044\001\002\000\004\004" +
    "\075\001\002\000\004\025\046\001\002\000\004\004\uffda" +
    "\001\002\000\004\006\047\001\002\000\004\011\050\001" +
    "\002\000\004\012\051\001\002\000\004\013\052\001\002" +
    "\000\006\026\053\040\056\001\002\000\004\013\066\001" +
    "\002\000\004\004\uffd8\001\002\000\004\004\uffd7\001\002" +
    "\000\004\013\057\001\002\000\004\006\060\001\002\000" +
    "\004\062\061\001\002\000\004\004\062\001\002\000\004" +
    "\007\063\001\002\000\004\025\064\001\002\000\004\006" +
    "\065\001\002\000\004\004\uffc3\001\002\000\004\006\067" +
    "\001\002\000\004\061\070\001\002\000\004\004\071\001" +
    "\002\000\004\007\072\001\002\000\004\025\073\001\002" +
    "\000\004\006\074\001\002\000\004\004\uffd6\001\002\000" +
    "\006\007\077\025\046\001\002\000\004\004\uffd9\001\002" +
    "\000\004\024\100\001\002\000\004\006\101\001\002\000" +
    "\006\004\uffdb\060\uffdb\001\002\000\004\004\112\001\002" +
    "\000\004\004\uffbe\001\002\000\004\004\105\001\002\000" +
    "\004\007\106\001\002\000\004\010\107\001\002\000\004" +
    "\006\110\001\002\000\006\002\ufff8\004\ufff8\001\002\000" +
    "\004\004\123\001\002\000\004\046\113\001\002\000\004" +
    "\051\114\001\002\000\004\012\115\001\002\000\004\013" +
    "\116\001\002\000\004\064\117\001\002\000\004\013\120" +
    "\001\002\000\004\007\121\001\002\000\004\006\122\001" +
    "\002\000\004\004\uffbc\001\002\000\006\007\124\046\125" +
    "\001\002\000\004\045\135\001\002\000\004\051\126\001" +
    "\002\000\004\012\127\001\002\000\004\013\130\001\002" +
    "\000\004\064\131\001\002\000\004\013\132\001\002\000" +
    "\004\007\133\001\002\000\004\006\134\001\002\000\004" +
    "\004\uffbb\001\002\000\004\006\136\001\002\000\004\004" +
    "\uffbd\001\002\000\004\006\140\001\002\000\004\004\141" +
    "\001\002\000\004\024\207\001\002\000\004\004\144\001" +
    "\002\000\004\004\203\001\002\000\004\047\145\001\002" +
    "\000\004\006\146\001\002\000\004\004\151\001\002\000" +
    "\004\004\177\001\002\000\004\004\uffb9\001\002\000\004" +
    "\050\152\001\002\000\004\011\153\001\002\000\004\012" +
    "\154\001\002\000\004\013\155\001\002\000\022\030\162" +
    "\045\166\052\160\053\165\054\156\055\161\056\163\057" +
    "\157\001\002\000\004\013\uffb4\001\002\000\004\013\uffb1" +
    "\001\002\000\004\013\uffb6\001\002\000\004\013\uffb3\001" +
    "\002\000\004\013\uffb0\001\002\000\004\013\uffb2\001\002" +
    "\000\004\013\167\001\002\000\004\013\uffb5\001\002\000" +
    "\004\013\uffaf\001\002\000\004\006\170\001\002\000\004" +
    "\061\171\001\002\000\004\004\172\001\002\000\004\007" +
    "\173\001\002\000\004\050\174\001\002\000\004\006\175" +
    "\001\002\000\004\004\uffb7\001\002\000\004\004\uffb8\001" +
    "\002\000\006\007\200\050\152\001\002\000\004\045\201" +
    "\001\002\000\004\006\202\001\002\000\004\004\uffba\001" +
    "\002\000\004\007\204\001\002\000\004\010\205\001\002" +
    "\000\004\006\206\001\002\000\006\002\ufff7\004\ufff7\001" +
    "\002\000\004\006\210\001\002\000\004\004\213\001\002" +
    "\000\004\004\251\001\002\000\004\004\uffd4\001\002\000" +
    "\004\025\214\001\002\000\004\006\215\001\002\000\004" +
    "\011\216\001\002\000\004\012\217\001\002\000\004\013" +
    "\220\001\002\000\010\031\223\032\224\040\056\001\002" +
    "\000\004\004\uffd2\001\002\000\004\004\uffd1\001\002\000" +
    "\004\013\241\001\002\000\004\013\225\001\002\000\004" +
    "\006\226\001\002\000\014\033\227\034\234\035\232\036" +
    "\230\037\233\001\002\000\004\004\uffce\001\002\000\004" +
    "\004\uffca\001\002\000\004\004\235\001\002\000\004\004" +
    "\uffcc\001\002\000\004\004\uffcb\001\002\000\004\004\uffcd" +
    "\001\002\000\004\007\236\001\002\000\004\025\237\001" +
    "\002\000\004\006\240\001\002\000\004\004\uffcf\001\002" +
    "\000\004\006\242\001\002\000\004\062\243\001\002\000" +
    "\004\004\244\001\002\000\004\007\245\001\002\000\004" +
    "\025\246\001\002\000\004\006\247\001\002\000\004\004" +
    "\uffd0\001\002\000\004\004\uffd3\001\002\000\006\007\252" +
    "\025\214\001\002\000\004\024\253\001\002\000\004\006" +
    "\254\001\002\000\004\004\uffd5\001\002\000\004\006\256" +
    "\001\002\000\004\004\141\001\002\000\004\004\144\001" +
    "\002\000\004\004\261\001\002\000\004\007\262\001\002" +
    "\000\004\010\263\001\002\000\004\006\264\001\002\000" +
    "\006\002\ufff5\004\ufff5\001\002\000\004\006\266\001\002" +
    "\000\004\004\270\001\002\000\004\004\307\001\002\000" +
    "\004\024\271\001\002\000\004\006\272\001\002\000\004" +
    "\004\274\001\002\000\004\004\303\001\002\000\004\025" +
    "\275\001\002\000\004\006\276\001\002\000\004\011\277" +
    "\001\002\000\004\012\300\001\002\000\004\013\301\001" +
    "\002\000\004\040\056\001\002\000\004\004\uffea\001\002" +
    "\000\004\007\304\001\002\000\004\024\305\001\002\000" +
    "\004\006\306\001\002\000\004\004\uffeb\001\002\000\004" +
    "\007\310\001\002\000\004\010\311\001\002\000\004\006" +
    "\312\001\002\000\006\002\ufffb\004\ufffb\001\002\000\004" +
    "\006\314\001\002\000\004\004\316\001\002\000\006\004" +
    "\uffae\060\102\001\002\000\004\024\317\001\002\000\004" +
    "\006\320\001\002\000\004\004\322\001\002\000\004\004" +
    "\uffe8\001\002\000\004\025\327\001\002\000\004\004\325" +
    "\001\002\000\004\004\uffe7\001\002\000\006\007\326\025" +
    "\327\001\002\000\004\024\u011a\001\002\000\004\006\330" +
    "\001\002\000\004\011\331\001\002\000\004\012\332\001" +
    "\002\000\004\013\333\001\002\000\022\026\334\027\335" +
    "\030\342\040\056\041\344\042\346\043\336\044\341\001" +
    "\002\000\004\013\u0113\001\002\000\004\013\u010c\001\002" +
    "\000\004\013\u0105\001\002\000\004\004\uffe5\001\002\000" +
    "\004\004\uffe0\001\002\000\004\013\376\001\002\000\004" +
    "\013\367\001\002\000\004\004\uffe1\001\002\000\004\013" +
    "\360\001\002\000\004\004\uffdf\001\002\000\004\013\351" +
    "\001\002\000\004\004\uffe6\001\002\000\004\004\uffde\001" +
    "\002\000\004\006\352\001\002\000\004\063\353\001\002" +
    "\000\004\004\354\001\002\000\004\007\355\001\002\000" +
    "\004\025\356\001\002\000\004\006\357\001\002\000\004" +
    "\004\uffc1\001\002\000\004\006\361\001\002\000\004\062" +
    "\362\001\002\000\004\004\363\001\002\000\004\007\364" +
    "\001\002\000\004\025\365\001\002\000\004\006\366\001" +
    "\002\000\004\004\uffc2\001\002\000\004\006\370\001\002" +
    "\000\004\062\371\001\002\000\004\004\372\001\002\000" +
    "\004\007\373\001\002\000\004\025\374\001\002\000\004" +
    "\006\375\001\002\000\004\004\uffe2\001\002\000\004\006" +
    "\377\001\002\000\004\062\u0100\001\002\000\004\004\u0101" +
    "\001\002\000\004\007\u0102\001\002\000\004\025\u0103\001" +
    "\002\000\004\006\u0104\001\002\000\004\004\uffbf\001\002" +
    "\000\004\006\u0106\001\002\000\004\063\u0107\001\002\000" +
    "\004\004\u0108\001\002\000\004\007\u0109\001\002\000\004" +
    "\025\u010a\001\002\000\004\006\u010b\001\002\000\004\004" +
    "\uffc0\001\002\000\004\006\u010d\001\002\000\004\062\u010e" +
    "\001\002\000\004\004\u010f\001\002\000\004\007\u0110\001" +
    "\002\000\004\025\u0111\001\002\000\004\006\u0112\001\002" +
    "\000\004\004\uffe3\001\002\000\004\006\u0114\001\002\000" +
    "\004\061\u0115\001\002\000\004\004\u0116\001\002\000\004" +
    "\007\u0117\001\002\000\004\025\u0118\001\002\000\004\006" +
    "\u0119\001\002\000\004\004\uffe4\001\002\000\004\006\u011b" +
    "\001\002\000\006\004\uffe9\060\uffe9\001\002\000\004\004" +
    "\u011d\001\002\000\004\007\u011e\001\002\000\004\010\u011f" +
    "\001\002\000\004\006\u0120\001\002\000\006\002\ufffa\004" +
    "\ufffa\001\002\000\004\006\u0122\001\002\000\004\004\u0124" +
    "\001\002\000\004\004\u013e\001\002\000\004\024\u0125\001" +
    "\002\000\004\006\u0126\001\002\000\004\004\u0128\001\002" +
    "\000\004\004\u0139\001\002\000\004\025\u012a\001\002\000" +
    "\004\004\uffc8\001\002\000\004\006\u012b\001\002\000\004" +
    "\011\u012c\001\002\000\004\012\u012d\001\002\000\004\013" +
    "\u012e\001\002\000\006\031\u0130\040\056\001\002\000\004" +
    "\004\uffc5\001\002\000\004\013\u0132\001\002\000\004\004" +
    "\uffc6\001\002\000\004\006\u0133\001\002\000\004\062\u0134" +
    "\001\002\000\004\004\u0135\001\002\000\004\007\u0136\001" +
    "\002\000\004\025\u0137\001\002\000\004\006\u0138\001\002" +
    "\000\004\004\uffc4\001\002\000\006\007\u013b\025\u012a\001" +
    "\002\000\004\004\uffc7\001\002\000\004\024\u013c\001\002" +
    "\000\004\006\u013d\001\002\000\004\004\uffc9\001\002\000" +
    "\004\007\u013f\001\002\000\004\010\u0140\001\002\000\004" +
    "\006\u0141\001\002\000\006\002\ufff6\004\ufff6\001\002\000" +
    "\004\006\u0143\001\002\000\004\004\u0144\001\002\000\004" +
    "\024\u014b\001\002\000\006\004\uffae\060\102\001\002\000" +
    "\004\004\u0147\001\002\000\004\007\u0148\001\002\000\004" +
    "\010\u0149\001\002\000\004\006\u014a\001\002\000\006\002" +
    "\ufff9\004\ufff9\001\002\000\004\006\u014c\001\002\000\004" +
    "\004\u014e\001\002\000\004\004\u0155\001\002\000\004\025" +
    "\u014f\001\002\000\004\006\u0150\001\002\000\004\011\u0151" +
    "\001\002\000\004\012\u0152\001\002\000\004\013\u0153\001" +
    "\002\000\004\040\056\001\002\000\004\004\uffdc\001\002" +
    "\000\004\007\u0156\001\002\000\004\024\u0157\001\002\000" +
    "\004\006\u0158\001\002\000\006\004\uffdd\060\uffdd\001\002" +
    "\000\004\006\u015a\001\002\000\004\004\u015b\001\002\000" +
    "\004\024\u0161\001\002\000\004\004\u015d\001\002\000\004" +
    "\007\u015e\001\002\000\004\010\u015f\001\002\000\004\006" +
    "\u0160\001\002\000\006\002\ufffc\004\ufffc\001\002\000\004" +
    "\006\u0162\001\002\000\004\004\u0165\001\002\000\004\004" +
    "\u0172\001\002\000\004\004\ufff3\001\002\000\004\025\u0166" +
    "\001\002\000\004\006\u0167\001\002\000\004\011\u0168\001" +
    "\002\000\004\012\u0169\001\002\000\004\013\u016a\001\002" +
    "\000\014\040\056\041\344\042\346\043\336\044\341\001" +
    "\002\000\004\004\ufff1\001\002\000\004\004\ufff0\001\002" +
    "\000\004\004\uffee\001\002\000\004\004\uffef\001\002\000" +
    "\004\004\uffed\001\002\000\004\004\uffec\001\002\000\004" +
    "\004\ufff2\001\002\000\006\007\u0173\025\u0166\001\002\000" +
    "\004\024\u0174\001\002\000\004\006\u0175\001\002\000\004" +
    "\004\ufff4\001\002\000\004\012\u0177\001\002\000\004\013" +
    "\u0178\001\002\000\022\014\024\015\031\016\027\017\025" +
    "\020\034\021\033\022\026\023\032\001\002\000\006\002" +
    "\ufffe\004\ufffe\001\002\000\004\010\015\001\002\000\004" +
    "\002\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0179\000\006\002\003\003\004\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\003\011\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\004\027\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\012\036\001\001\000\006\010\103\051\102" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\033" +
    "\042\034\044\001\001\000\004\034\075\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\021\054" +
    "\035\053\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\045\110\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\013" +
    "\141\001\001\000\002\001\001\000\004\014\142\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\046\147\047\146\001\001\000\004\046\175\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\050\163\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\036\210\037\211\001\001\000\004\037\247\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\021\221\040\220\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\041\230\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\013\256\001" +
    "\001\000\004\014\257\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\006\266\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\026" +
    "\272\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\021\301\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\007\314\001" +
    "\001\000\006\010\u011b\051\102\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\027\322\030\320\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\030\323\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\016\021\336\022\342\023\337\024\344\025" +
    "\347\031\346\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\015\u0122\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\042\u0126\043\u0128\001\001\000" +
    "\004\043\u0139\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\021\u012e\044\u0130\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\011\u0144\001\001\000\002\001\001\000\006\010" +
    "\u0145\051\102\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\032\u014c\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\021\u0153\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\005\u015b\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\016\u0162\017\u0163\001" +
    "\001\000\004\017\u0170\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\016\020\u016a\021\u016b\022\u016d" +
    "\023\u016c\024\u016e\025\u016f\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\004\u0178\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$ParserXML$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$ParserXML$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$ParserXML$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$ParserXML$actions {
  private final ParserXML parser;

  /** Constructor */
  CUP$ParserXML$actions(ParserXML parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$ParserXML$do_action_part00000000(
    int                        CUP$ParserXML$act_num,
    java_cup.runtime.lr_parser CUP$ParserXML$parser,
    java.util.Stack            CUP$ParserXML$stack,
    int                        CUP$ParserXML$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$ParserXML$result;

      /* select the action based on the action number */
      switch (CUP$ParserXML$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= acciones EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)).value;
		RESULT = start_val;
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$ParserXML$parser.done_parsing();
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // acciones ::= MENOR ACCIONES MAYOR accion MENOR DIAGONAL ACCIONES MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("acciones",0, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // acciones ::= accion 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("acciones",0, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // accion ::= MENOR ACCION NOMBRE IGUAL COMILLA tipo_accion 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("accion",1, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-5)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // accion ::= accion MENOR ACCION NOMBRE IGUAL COMILLA tipo_accion 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("accion",1, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-6)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // tipo_accion ::= CREARSITIO COMILLA MAYOR parametros_crear_sitio MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",2, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // tipo_accion ::= BORRARSITIO COMILLA MAYOR parametros_borrar_sitio MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",2, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // tipo_accion ::= NUEVAPAGINA COMILLA MAYOR parametros_nueva_pagina etiquetas MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",2, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-8)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // tipo_accion ::= BORRARPAGINA COMILLA MAYOR parametros_borrar_pagina etiquetas MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",2, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-8)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // tipo_accion ::= MODIFICARPAGINA COMILLA MAYOR parametros_modificar_pagina etiquetas MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",2, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-8)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // tipo_accion ::= AGREGARCOMPONENTE COMILLA MAYOR parametros_agregar_componente atributos MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",2, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-8)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // tipo_accion ::= ELIMINARCOMPONENTE COMILLA MAYOR parametros_eliminar_componente MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",2, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // tipo_accion ::= MODIFICARCOMPONENTE COMILLA MAYOR parametros_agregar_componente atributos MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",2, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-8)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // parametros_crear_sitio ::= MENOR PARAMETROS MAYOR parametro_lista_crear_sitio MENOR DIAGONAL PARAMETROS MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_crear_sitio",3, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // parametro_lista_crear_sitio ::= parametro_crear_sitio 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_crear_sitio",12, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // parametro_lista_crear_sitio ::= parametro_lista_crear_sitio parametro_crear_sitio 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_crear_sitio",12, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // parametro_crear_sitio ::= MENOR PARAMETRO MAYOR NOMBRE IGUAL COMILLA tipo_param_crear_sitio 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_crear_sitio",13, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-6)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // tipo_param_crear_sitio ::= parametro_tipo_id 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_crear_sitio",14, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // tipo_param_crear_sitio ::= parametro_tipo_usuario_creacion 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_crear_sitio",14, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // tipo_param_crear_sitio ::= parametro_tipo_fecha_creacion 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_crear_sitio",14, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // tipo_param_crear_sitio ::= parametro_tipo_fecha_mod 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_crear_sitio",14, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // tipo_param_crear_sitio ::= parametro_tipo_usuario_mod 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_crear_sitio",14, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // parametros_borrar_sitio ::= MENOR PARAMETROS MAYOR parametro_borrar_sitio MENOR DIAGONAL PARAMETROS MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_borrar_sitio",4, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // parametro_borrar_sitio ::= MENOR PARAMETRO MAYOR NOMBRE IGUAL COMILLA parametro_tipo_id 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_borrar_sitio",20, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-6)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // parametros_nueva_pagina ::= MENOR PARAMETROS MAYOR parametro_lista_nueva_pagina MENOR DIAGONAL PARAMETROS MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_nueva_pagina",5, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // parametro_lista_nueva_pagina ::= parametro_nueva_pagina 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_nueva_pagina",21, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // parametro_lista_nueva_pagina ::= parametro_lista_nueva_pagina parametro_nueva_pagina 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_nueva_pagina",21, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // parametro_nueva_pagina ::= MENOR PARAMETRO MAYOR NOMBRE IGUAL COMILLA tipo_param_nueva_pagina 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_nueva_pagina",22, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-6)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // tipo_param_nueva_pagina ::= parametro_tipo_id 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",23, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // tipo_param_nueva_pagina ::= TITULO COMILLA MAYOR LITERAL MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",23, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // tipo_param_nueva_pagina ::= SITIO COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",23, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // tipo_param_nueva_pagina ::= PADRE COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",23, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // tipo_param_nueva_pagina ::= parametro_tipo_usuario_creacion 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",23, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // tipo_param_nueva_pagina ::= parametro_tipo_fecha_creacion 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",23, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // tipo_param_nueva_pagina ::= parametro_tipo_fecha_mod 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",23, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // tipo_param_nueva_pagina ::= parametro_tipo_usuario_mod 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",23, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // parametros_borrar_pagina ::= MENOR PARAMETROS MAYOR parametro_borrar_pagina MENOR DIAGONAL PARAMETROS MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_borrar_pagina",7, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // parametro_borrar_pagina ::= MENOR PARAMETRO MAYOR NOMBRE IGUAL COMILLA parametro_tipo_id 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_borrar_pagina",24, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-6)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // parametros_modificar_pagina ::= MENOR PARAMETROS MAYOR parametro_lista_modificar_pagina MENOR DIAGONAL PARAMETROS MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_modificar_pagina",8, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // parametro_lista_modificar_pagina ::= parametro_modificar_pagina 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_modificar_pagina",25, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // parametro_lista_modificar_pagina ::= parametro_lista_modificar_pagina parametro_modificar_pagina 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_modificar_pagina",25, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // parametro_modificar_pagina ::= MENOR PARAMETRO MAYOR NOMBRE IGUAL COMILLA tipo_param_modificar_pagina 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_modificar_pagina",26, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-6)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // tipo_param_modificar_pagina ::= parametro_tipo_id 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_modificar_pagina",27, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // tipo_param_modificar_pagina ::= TITULO COMILLA MAYOR LITERAL MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_modificar_pagina",27, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // parametros_agregar_componente ::= MENOR PARAMETROS MAYOR parametro_lista_agregar_co MENOR DIAGONAL PARAMETROS MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_agregar_componente",9, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // parametro_lista_agregar_co ::= parametro_agregar_co 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_agregar_co",28, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // parametro_lista_agregar_co ::= parametro_lista_agregar_co parametro_agregar_co 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_agregar_co",28, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // parametro_agregar_co ::= MENOR PARAMETRO MAYOR NOMBRE IGUAL COMILLA tipo_param_agregar_co 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_agregar_co",29, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-6)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // tipo_param_agregar_co ::= parametro_tipo_id 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_agregar_co",30, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // tipo_param_agregar_co ::= PAGINA COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_agregar_co",30, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // tipo_param_agregar_co ::= CLASE COMILLA MAYOR tipo_clase MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_agregar_co",30, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // tipo_clase ::= TITULOC 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_clase",31, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // tipo_clase ::= PARRAFO 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_clase",31, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // tipo_clase ::= IMAGEN 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_clase",31, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // tipo_clase ::= VIDEO 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_clase",31, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // tipo_clase ::= MENU 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_clase",31, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // parametros_eliminar_componente ::= MENOR PARAMETROS MAYOR parametro_lista_eliminar_co MENOR DIAGONAL PARAMETROS MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_eliminar_componente",11, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // parametro_lista_eliminar_co ::= parametro_eliminar_co 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_eliminar_co",32, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // parametro_lista_eliminar_co ::= parametro_lista_eliminar_co parametro_eliminar_co 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_eliminar_co",32, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // parametro_eliminar_co ::= MENOR PARAMETRO MAYOR NOMBRE IGUAL COMILLA tipo_param_eliminar_co 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_eliminar_co",33, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-6)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // tipo_param_eliminar_co ::= parametro_tipo_id 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_eliminar_co",34, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // tipo_param_eliminar_co ::= PAGINA COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_eliminar_co",34, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // parametro_tipo_id ::= IDPARAM COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_tipo_id",15, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // parametro_tipo_usuario_creacion ::= USUARIOCREACION COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_tipo_usuario_creacion",16, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // parametro_tipo_fecha_creacion ::= FECHACREACION COMILLA MAYOR VALORFECHA MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_tipo_fecha_creacion",17, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // parametro_tipo_fecha_mod ::= FECHAMODIFICACION COMILLA MAYOR VALORFECHA MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_tipo_fecha_mod",18, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // parametro_tipo_usuario_mod ::= USUARIOMODIFICACION COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_tipo_usuario_mod",19, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // etiquetas ::= empty 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("etiquetas",6, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // etiquetas ::= CONTENIDOETIQUETA etiqueta MENOR DIAGONAL ETIQUETAS MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("etiquetas",6, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-5)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // etiqueta ::= MENOR ETIQUETA VALORETIQUETA IGUAL COMILLA DATOETIQUETA COMILLA DIAGONAL MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("etiqueta",35, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-8)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // etiqueta ::= etiqueta MENOR ETIQUETA VALORETIQUETA IGUAL COMILLA DATOETIQUETA COMILLA DIAGONAL MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("etiqueta",35, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-9)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // atributos ::= MENOR ATRIBUTOS MAYOR atributo_lista MENOR DIAGONAL ETIQUETAS MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("atributos",10, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // atributo_lista ::= atributo 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("atributo_lista",37, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // atributo_lista ::= atributo_lista atributo 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("atributo_lista",37, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // atributo ::= MENOR ATRIBUTO NOMBRE IGUAL COMILLA valor_atributo COMILLA MAYOR LITERAL MENOR DIAGONAL ATRIBUTO MAYOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("atributo",36, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-12)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // valor_atributo ::= TEXTO 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",38, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // valor_atributo ::= ALINEACION 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",38, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // valor_atributo ::= COLOR 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",38, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // valor_atributo ::= ORIGEN 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",38, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // valor_atributo ::= ALTURA 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",38, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // valor_atributo ::= ANCHO 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",38, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // valor_atributo ::= PADRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",38, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // valor_atributo ::= ETIQUETAS 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",38, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // empty ::= 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("empty",39, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$ParserXML$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$ParserXML$do_action(
    int                        CUP$ParserXML$act_num,
    java_cup.runtime.lr_parser CUP$ParserXML$parser,
    java.util.Stack            CUP$ParserXML$stack,
    int                        CUP$ParserXML$top)
    throws java.lang.Exception
    {
              return CUP$ParserXML$do_action_part00000000(
                               CUP$ParserXML$act_num,
                               CUP$ParserXML$parser,
                               CUP$ParserXML$stack,
                               CUP$ParserXML$top);
    }
}

}
