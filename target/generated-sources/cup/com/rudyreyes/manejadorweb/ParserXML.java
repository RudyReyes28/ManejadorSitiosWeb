
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package com.rudyreyes.manejadorweb;

import java.util.ArrayList;
import java.util.List;
import java_cup.runtime.*;
import com.rudyreyes.manejadorweb.modelo.componente.*;
import com.rudyreyes.manejadorweb.modelo.paginaweb.*;
import com.rudyreyes.manejadorweb.modelo.sitioweb.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class ParserXML extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return ParserXMLSym.class;
}

  /** Default constructor. */
  @Deprecated
  public ParserXML() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public ParserXML(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public ParserXML(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\133\000\002\002\004\000\002\033\005\000\002\033" +
    "\003\000\002\002\010\000\002\002\011\000\002\003\012" +
    "\000\002\003\012\000\002\003\013\000\002\003\012\000" +
    "\002\003\013\000\002\003\013\000\002\003\012\000\002" +
    "\003\013\000\002\004\007\000\002\007\004\000\002\007" +
    "\003\000\002\041\010\000\002\042\003\000\002\042\003" +
    "\000\002\042\003\000\002\042\003\000\002\042\003\000" +
    "\002\005\007\000\002\010\010\000\002\011\007\000\002" +
    "\034\004\000\002\034\003\000\002\035\010\000\002\036" +
    "\003\000\002\036\012\000\002\036\012\000\002\036\012" +
    "\000\002\036\003\000\002\036\003\000\002\036\003\000" +
    "\002\036\003\000\002\006\007\000\002\012\010\000\002" +
    "\013\007\000\002\015\004\000\002\015\003\000\002\014" +
    "\010\000\002\016\003\000\002\016\012\000\002\016\012" +
    "\000\002\016\012\000\002\016\003\000\002\016\003\000" +
    "\002\016\003\000\002\016\003\000\002\017\007\000\002" +
    "\026\007\000\002\027\004\000\002\027\003\000\002\030" +
    "\010\000\002\031\003\000\002\031\012\000\002\032\007" +
    "\000\002\020\004\000\002\020\003\000\002\021\010\000" +
    "\002\025\003\000\002\025\012\000\002\025\012\000\002" +
    "\046\003\000\002\046\003\000\002\046\003\000\002\046" +
    "\003\000\002\046\003\000\002\045\012\000\002\047\012" +
    "\000\002\050\012\000\002\051\012\000\002\052\012\000" +
    "\002\037\005\000\002\037\003\000\002\040\014\000\002" +
    "\040\013\000\002\022\007\000\002\023\004\000\002\023" +
    "\003\000\002\024\017\000\002\044\003\000\002\044\003" +
    "\000\002\044\003\000\002\044\003\000\002\044\003\000" +
    "\002\044\003\000\002\044\003\000\002\044\003\000\002" +
    "\043\002" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0163\000\006\004\007\063\004\001\002\000\004\004" +
    "\007\001\002\000\004\002\u0163\001\002\000\006\002\uffff" +
    "\004\u015d\001\002\000\004\007\010\001\002\000\004\010" +
    "\011\001\002\000\004\011\012\001\002\000\004\012\013" +
    "\001\002\000\022\013\014\014\021\015\017\020\015\027" +
    "\024\057\023\061\016\062\022\001\002\000\004\012\u0144" +
    "\001\002\000\004\012\u0132\001\002\000\004\012\u0115\001" +
    "\002\000\004\012\343\001\002\000\010\002\ufffe\004\ufffe" +
    "\064\ufffe\001\002\000\004\012\321\001\002\000\004\012" +
    "\304\001\002\000\004\012\175\001\002\000\004\012\025" +
    "\001\002\000\004\005\026\001\002\000\004\004\030\001" +
    "\002\000\006\004\uffa7\047\152\001\002\000\004\016\031" +
    "\001\002\000\004\005\032\001\002\000\004\004\034\001" +
    "\002\000\004\026\151\001\002\000\004\017\037\001\002" +
    "\000\006\004\034\026\uffd9\001\002\000\004\026\uffda\001" +
    "\002\000\004\010\040\001\002\000\004\011\041\001\002" +
    "\000\004\012\042\001\002\000\022\021\055\022\054\023" +
    "\043\024\051\025\057\042\052\044\047\045\044\001\002" +
    "\000\004\012\142\001\002\000\004\012\133\001\002\000" +
    "\006\004\uffd7\026\uffd7\001\002\000\006\004\uffd8\026\uffd8" +
    "\001\002\000\004\012\124\001\002\000\006\004\uffd2\026" +
    "\uffd2\001\002\000\004\012\115\001\002\000\004\012\106" +
    "\001\002\000\006\004\uffd3\026\uffd3\001\002\000\004\012" +
    "\077\001\002\000\004\012\070\001\002\000\006\004\uffd1" +
    "\026\uffd1\001\002\000\004\012\061\001\002\000\006\004" +
    "\uffd0\026\uffd0\001\002\000\004\005\062\001\002\000\004" +
    "\067\063\001\002\000\004\004\064\001\002\000\004\006" +
    "\065\001\002\000\004\017\066\001\002\000\004\005\067" +
    "\001\002\000\006\004\uffba\026\uffba\001\002\000\004\005" +
    "\071\001\002\000\004\066\072\001\002\000\004\004\073" +
    "\001\002\000\004\006\074\001\002\000\004\017\075\001" +
    "\002\000\004\005\076\001\002\000\006\004\uffbc\026\uffbc" +
    "\001\002\000\004\005\100\001\002\000\004\066\101\001" +
    "\002\000\004\004\102\001\002\000\004\006\103\001\002" +
    "\000\004\017\104\001\002\000\004\005\105\001\002\000" +
    "\006\004\uffbb\026\uffbb\001\002\000\004\005\107\001\002" +
    "\000\004\066\110\001\002\000\004\004\111\001\002\000" +
    "\004\006\112\001\002\000\004\017\113\001\002\000\004" +
    "\005\114\001\002\000\006\004\uffd4\026\uffd4\001\002\000" +
    "\004\005\116\001\002\000\004\066\117\001\002\000\004" +
    "\004\120\001\002\000\004\006\121\001\002\000\004\017" +
    "\122\001\002\000\004\005\123\001\002\000\006\004\uffb8" +
    "\026\uffb8\001\002\000\004\005\125\001\002\000\004\065" +
    "\126\001\002\000\004\004\127\001\002\000\004\006\130" +
    "\001\002\000\004\017\131\001\002\000\004\005\132\001" +
    "\002\000\006\004\uffd6\026\uffd6\001\002\000\004\005\134" +
    "\001\002\000\004\066\135\001\002\000\004\004\136\001" +
    "\002\000\004\006\137\001\002\000\004\017\140\001\002" +
    "\000\004\005\141\001\002\000\006\004\uffd5\026\uffd5\001" +
    "\002\000\004\005\143\001\002\000\004\067\144\001\002" +
    "\000\004\004\145\001\002\000\004\006\146\001\002\000" +
    "\004\017\147\001\002\000\004\005\150\001\002\000\006" +
    "\004\uffb9\026\uffb9\001\002\000\006\004\uffdb\047\uffdb\001" +
    "\002\000\004\004\162\001\002\000\004\004\uffb6\001\002" +
    "\000\004\004\155\001\002\000\004\006\156\001\002\000" +
    "\004\007\157\001\002\000\004\005\160\001\002\000\010" +
    "\002\ufff8\004\ufff8\064\ufff8\001\002\000\004\051\174\001" +
    "\002\000\004\046\163\001\002\000\004\050\164\001\002" +
    "\000\004\011\165\001\002\000\004\012\166\001\002\000" +
    "\004\070\167\001\002\000\004\012\170\001\002\000\004" +
    "\006\171\001\002\000\004\005\172\001\002\000\006\004" +
    "\162\051\uffb4\001\002\000\004\051\uffb5\001\002\000\004" +
    "\004\uffb7\001\002\000\004\005\176\001\002\000\004\004" +
    "\177\001\002\000\004\016\242\001\002\000\004\004\202" +
    "\001\002\000\004\004\236\001\002\000\004\032\203\001" +
    "\002\000\004\005\204\001\002\000\004\004\207\001\002" +
    "\000\004\034\235\001\002\000\006\004\207\034\uffb1\001" +
    "\002\000\004\033\210\001\002\000\004\010\211\001\002" +
    "\000\004\011\212\001\002\000\004\012\213\001\002\000" +
    "\022\035\217\036\214\037\216\040\221\041\215\042\220" +
    "\043\224\060\223\001\002\000\004\012\uffad\001\002\000" +
    "\004\012\uffaa\001\002\000\004\012\uffac\001\002\000\004" +
    "\012\uffaf\001\002\000\004\012\uffa9\001\002\000\004\012" +
    "\uffab\001\002\000\004\012\225\001\002\000\004\012\uffae" +
    "\001\002\000\004\012\uffa8\001\002\000\004\005\226\001" +
    "\002\000\004\065\227\001\002\000\004\004\230\001\002" +
    "\000\004\006\231\001\002\000\004\033\232\001\002\000" +
    "\004\005\233\001\002\000\006\004\uffb0\034\uffb0\001\002" +
    "\000\004\034\uffb2\001\002\000\004\004\uffb3\001\002\000" +
    "\004\006\237\001\002\000\004\007\240\001\002\000\004" +
    "\005\241\001\002\000\010\002\ufff7\004\ufff7\064\ufff7\001" +
    "\002\000\004\005\243\001\002\000\004\004\246\001\002" +
    "\000\004\026\303\001\002\000\006\004\246\026\uffc6\001" +
    "\002\000\004\017\247\001\002\000\004\010\250\001\002" +
    "\000\004\011\251\001\002\000\004\012\252\001\002\000" +
    "\010\021\055\030\255\031\256\001\002\000\006\004\uffc5" +
    "\026\uffc5\001\002\000\006\004\uffc4\026\uffc4\001\002\000" +
    "\004\012\273\001\002\000\004\012\257\001\002\000\004" +
    "\005\260\001\002\000\014\052\261\053\266\054\264\055" +
    "\265\056\263\001\002\000\004\004\uffc1\001\002\000\004" +
    "\004\267\001\002\000\004\004\uffbd\001\002\000\004\004" +
    "\uffbf\001\002\000\004\004\uffbe\001\002\000\004\004\uffc0" +
    "\001\002\000\004\006\270\001\002\000\004\017\271\001" +
    "\002\000\004\005\272\001\002\000\006\004\uffc2\026\uffc2" +
    "\001\002\000\004\005\274\001\002\000\004\066\275\001" +
    "\002\000\004\004\276\001\002\000\004\006\277\001\002" +
    "\000\004\017\300\001\002\000\004\005\301\001\002\000" +
    "\006\004\uffc3\026\uffc3\001\002\000\004\026\uffc7\001\002" +
    "\000\004\004\uffcf\001\002\000\004\005\305\001\002\000" +
    "\004\004\307\001\002\000\004\004\202\001\002\000\004" +
    "\016\310\001\002\000\004\005\311\001\002\000\004\004" +
    "\246\001\002\000\004\026\313\001\002\000\004\004\uffc8" +
    "\001\002\000\004\004\315\001\002\000\004\006\316\001" +
    "\002\000\004\007\317\001\002\000\004\005\320\001\002" +
    "\000\010\002\ufff5\004\ufff5\064\ufff5\001\002\000\004\005" +
    "\322\001\002\000\004\004\324\001\002\000\004\004\337" +
    "\001\002\000\004\016\325\001\002\000\004\005\326\001" +
    "\002\000\004\004\330\001\002\000\004\026\336\001\002" +
    "\000\004\017\331\001\002\000\004\010\332\001\002\000" +
    "\004\011\333\001\002\000\004\012\334\001\002\000\004" +
    "\021\055\001\002\000\004\026\uffea\001\002\000\004\004" +
    "\uffeb\001\002\000\004\006\340\001\002\000\004\007\341" +
    "\001\002\000\004\005\342\001\002\000\010\002\ufffb\004" +
    "\ufffb\064\ufffb\001\002\000\004\005\344\001\002\000\004" +
    "\004\346\001\002\000\006\004\uffa7\047\152\001\002\000" +
    "\004\016\347\001\002\000\004\005\350\001\002\000\004" +
    "\004\352\001\002\000\006\004\352\026\uffe7\001\002\000" +
    "\004\017\355\001\002\000\004\026\354\001\002\000\006" +
    "\004\uffe9\047\uffe9\001\002\000\004\010\356\001\002\000" +
    "\004\011\357\001\002\000\004\012\360\001\002\000\022" +
    "\021\055\022\054\023\043\024\051\025\057\042\365\044" +
    "\361\045\362\001\002\000\004\012\u0108\001\002\000\004" +
    "\012\u0101\001\002\000\006\004\uffe5\026\uffe5\001\002\000" +
    "\006\004\uffe0\026\uffe0\001\002\000\004\012\372\001\002" +
    "\000\006\004\uffe1\026\uffe1\001\002\000\006\004\uffdf\026" +
    "\uffdf\001\002\000\006\004\uffe6\026\uffe6\001\002\000\006" +
    "\004\uffde\026\uffde\001\002\000\004\005\373\001\002\000" +
    "\004\066\374\001\002\000\004\004\375\001\002\000\004" +
    "\006\376\001\002\000\004\017\377\001\002\000\004\005" +
    "\u0100\001\002\000\006\004\uffe2\026\uffe2\001\002\000\004" +
    "\005\u0102\001\002\000\004\066\u0103\001\002\000\004\004" +
    "\u0104\001\002\000\004\006\u0105\001\002\000\004\017\u0106" +
    "\001\002\000\004\005\u0107\001\002\000\006\004\uffe3\026" +
    "\uffe3\001\002\000\004\005\u0109\001\002\000\004\065\u010a" +
    "\001\002\000\004\004\u010b\001\002\000\004\006\u010c\001" +
    "\002\000\004\017\u010d\001\002\000\004\005\u010e\001\002" +
    "\000\006\004\uffe4\026\uffe4\001\002\000\004\026\uffe8\001" +
    "\002\000\004\004\u0111\001\002\000\004\006\u0112\001\002" +
    "\000\004\007\u0113\001\002\000\004\005\u0114\001\002\000" +
    "\010\002\ufffa\004\ufffa\064\ufffa\001\002\000\004\005\u0116" +
    "\001\002\000\004\004\u0118\001\002\000\004\004\u012e\001" +
    "\002\000\004\016\u0119\001\002\000\004\005\u011a\001\002" +
    "\000\004\004\u011c\001\002\000\004\026\u012d\001\002\000" +
    "\004\017\u011f\001\002\000\006\004\u011c\026\uffcc\001\002" +
    "\000\004\026\uffcd\001\002\000\004\010\u0120\001\002\000" +
    "\004\011\u0121\001\002\000\004\012\u0122\001\002\000\006" +
    "\021\055\030\u0124\001\002\000\006\004\uffca\026\uffca\001" +
    "\002\000\004\012\u0126\001\002\000\006\004\uffcb\026\uffcb" +
    "\001\002\000\004\005\u0127\001\002\000\004\066\u0128\001" +
    "\002\000\004\004\u0129\001\002\000\004\006\u012a\001\002" +
    "\000\004\017\u012b\001\002\000\004\005\u012c\001\002\000" +
    "\006\004\uffc9\026\uffc9\001\002\000\004\004\uffce\001\002" +
    "\000\004\006\u012f\001\002\000\004\007\u0130\001\002\000" +
    "\004\005\u0131\001\002\000\010\002\ufff6\004\ufff6\064\ufff6" +
    "\001\002\000\004\005\u0133\001\002\000\004\004\u0134\001" +
    "\002\000\004\016\u013a\001\002\000\004\004\u0136\001\002" +
    "\000\004\006\u0137\001\002\000\004\007\u0138\001\002\000" +
    "\004\005\u0139\001\002\000\010\002\ufff9\004\ufff9\064\ufff9" +
    "\001\002\000\004\005\u013b\001\002\000\004\004\u013d\001" +
    "\002\000\004\026\u0143\001\002\000\004\017\u013e\001\002" +
    "\000\004\010\u013f\001\002\000\004\011\u0140\001\002\000" +
    "\004\012\u0141\001\002\000\004\021\055\001\002\000\004" +
    "\026\uffdc\001\002\000\004\004\uffdd\001\002\000\004\005" +
    "\u0145\001\002\000\004\004\u0146\001\002\000\004\016\u014c" +
    "\001\002\000\004\004\u0148\001\002\000\004\006\u0149\001" +
    "\002\000\004\007\u014a\001\002\000\004\005\u014b\001\002" +
    "\000\010\002\ufffc\004\ufffc\064\ufffc\001\002\000\004\005" +
    "\u014d\001\002\000\004\004\u0150\001\002\000\004\026\u015c" +
    "\001\002\000\006\004\u0150\026\ufff2\001\002\000\004\017" +
    "\u0151\001\002\000\004\010\u0152\001\002\000\004\011\u0153" +
    "\001\002\000\004\012\u0154\001\002\000\014\021\055\022" +
    "\054\023\043\024\051\025\057\001\002\000\006\004\ufff1" +
    "\026\ufff1\001\002\000\006\004\ufff0\026\ufff0\001\002\000" +
    "\006\004\uffee\026\uffee\001\002\000\006\004\uffef\026\uffef" +
    "\001\002\000\006\004\uffed\026\uffed\001\002\000\006\004" +
    "\uffec\026\uffec\001\002\000\004\026\ufff3\001\002\000\004" +
    "\004\ufff4\001\002\000\004\007\u015e\001\002\000\004\010" +
    "\u015f\001\002\000\004\011\u0160\001\002\000\004\012\u0161" +
    "\001\002\000\022\013\014\014\021\015\017\020\015\027" +
    "\024\057\023\061\016\062\022\001\002\000\010\002\ufffd" +
    "\004\ufffd\064\ufffd\001\002\000\004\002\001\001\002\000" +
    "\006\004\u015d\064\u0165\001\002\000\004\002\000\001\002" +
    "" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0163\000\006\002\005\033\004\001\001\000\004\002" +
    "\u0163\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\003\017\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\013\026\001" +
    "\001\000\006\037\153\043\152\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\014\034\015\032\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\014\034\015\035" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\016\016\045\045\044\047\052" +
    "\050\047\051\055\052\057\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\040\160\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\040\172\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\017\177\001\001\000\002\001\001\000\004\022\200" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\023\204\024\205\001\001\000\002\001\001" +
    "\000\006\023\233\024\205\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\044\221\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\020\243\021\244\001\001" +
    "\000\002\001\001\000\006\020\301\021\244\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\025\252\045\253\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\046\261\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\032\305\001\001\000\004\022\313\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\020\311\021\244\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\005\322\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\010\326\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\045\334\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\011\344\001\001" +
    "\000\006\037\u010f\043\152\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\034\352\035\350\001\001\000\006" +
    "\034\u010e\035\350\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\016\036\367\045\362\047\365\050" +
    "\363\051\366\052\370\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\026\u0116\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\027\u011a\030\u011c\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\027\u011d\030\u011c" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\031\u0124\045\u0122\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\006\u0134\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\012\u013b\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\045\u0141\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\004\u0146\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\007\u014d\041\u014e" +
    "\001\001\000\002\001\001\000\006\007\u015a\041\u014e\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\016\042\u0154\045\u0155\047\u0157\050" +
    "\u0156\051\u0158\052\u0159\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\003\u0161\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$ParserXML$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$ParserXML$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$ParserXML$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    Componente nuevoComponente = new Componente();
    EliminarComponente elimComponente = new EliminarComponente();
    PaginaWeb nuevaPagina = new PaginaWeb();
    SitioWeb nuevoSitio = new SitioWeb();
    List<Object> listaAcciones = new ArrayList<>();


    public List<Object> obtenerAcciones(){
        return listaAcciones;
    }

    public void limpiarAcciones(){
        listaAcciones.clear();
    }
    


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$ParserXML$actions {
  private final ParserXML parser;

  /** Constructor */
  CUP$ParserXML$actions(ParserXML parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$ParserXML$do_action_part00000000(
    int                        CUP$ParserXML$act_num,
    java_cup.runtime.lr_parser CUP$ParserXML$parser,
    java.util.Stack            CUP$ParserXML$stack,
    int                        CUP$ParserXML$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$ParserXML$result;

      /* select the action based on the action number */
      switch (CUP$ParserXML$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= acciones EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)).value;
		RESULT = start_val;
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$ParserXML$parser.done_parsing();
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // acciones ::= ARBREACCIONES accion CIERREACCION 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("acciones",25, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-2)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // acciones ::= accion 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("acciones",25, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // accion ::= MENOR ACCION NOMBRE IGUAL COMILLA tipo_accion 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("accion",0, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-5)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // accion ::= accion MENOR ACCION NOMBRE IGUAL COMILLA tipo_accion 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("accion",0, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-6)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // tipo_accion ::= CREARSITIO COMILLA MAYOR parametros_crear_sitio MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;
		
                    SitioWeb enviarSitio = new SitioWeb();
                    enviarSitio.setIdSitioSinCorchetes(nuevoSitio.getIdSitio());
                    enviarSitio.setUsuarioCreacionSinCorchetes(nuevoSitio.getUsuarioCreacion());
                    enviarSitio.setFechaCreacionSinCorchetes(nuevoSitio.getFechaCreacion());
                    enviarSitio.setFechaModificacionSinCorchetes(nuevoSitio.getFechaModificacion());
                    enviarSitio.setUsuarioModificacionSinCorchetes(nuevoSitio.getUsuarioModificacion());
				
				
                    listaAcciones.add(enviarSitio);
				
                    nuevoSitio = new SitioWeb();
	
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",1, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // tipo_accion ::= BORRARSITIO COMILLA MAYOR parametros_borrar_sitio MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;
		
		BorrarSitioWeb enviarBorrarSitio = new BorrarSitioWeb(nuevoSitio.getIdSitio());
		listaAcciones.add(enviarBorrarSitio);
				
		nuevoSitio = new SitioWeb();
				
		
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",1, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // tipo_accion ::= NUEVAPAGINA COMILLA MAYOR parametros_nueva_pagina etiquetas MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;
		
		PaginaWeb enviarPagina = new PaginaWeb();
		enviarPagina.setIdPaginaSinCorchetes(nuevaPagina.getIdPagina());
		enviarPagina.setTituloSinCorchetes(nuevaPagina.getTitulo());
		enviarPagina.setSitioSinCorchetes(nuevaPagina.getSitio());
		enviarPagina.setIdPadreCorchetes(nuevaPagina.getIdPadre());
		enviarPagina.setUsuarioCreacionSinCorchetes(nuevaPagina.getUsuarioCreacion());
		enviarPagina.setFechaCreacionSinCorchetes(nuevaPagina.getFechaCreacion());
		enviarPagina.setFechaModificacionSinCorchetes(nuevaPagina.getFechaModificacion());
		enviarPagina.setUsuarioModificacionSinCorchetes(nuevaPagina.getUsuarioModificacion());
				
		List<String> listaEtiquetas = new ArrayList<>(nuevaPagina.getEtiquetas());
		enviarPagina.setEtiquetas(listaEtiquetas);
		listaAcciones.add(enviarPagina);
				
		nuevaPagina = new PaginaWeb();
			
		
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",1, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-8)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // tipo_accion ::= BORRARPAGINA COMILLA MAYOR parametros_borrar_pagina MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;
		
		BorrarPaginaWeb enviarBorrarPagina = new BorrarPaginaWeb(nuevaPagina.getIdPagina());
		listaAcciones.add(enviarBorrarPagina);
				
		nuevaPagina = new PaginaWeb();
				
		
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",1, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // tipo_accion ::= MODIFICARPAGINA COMILLA MAYOR parametros_modificar_pagina etiquetas MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;
		
		ModificarPagina enviarPaginaMod = new ModificarPagina();
		enviarPaginaMod.setIdPaginaSinCorchetes(nuevaPagina.getIdPagina());
		enviarPaginaMod.setTituloSinCorchetes(nuevaPagina.getTitulo());
		enviarPaginaMod.setSitioSinCorchetes(nuevaPagina.getSitio());
		enviarPaginaMod.setIdPadreCorchetes(nuevaPagina.getIdPadre());
		enviarPaginaMod.setUsuarioCreacionSinCorchetes(nuevaPagina.getUsuarioCreacion());
		enviarPaginaMod.setFechaCreacionSinCorchetes(nuevaPagina.getFechaCreacion());
		enviarPaginaMod.setFechaModificacionSinCorchetes(nuevaPagina.getFechaModificacion());
		enviarPaginaMod.setUsuarioModificacionSinCorchetes(nuevaPagina.getUsuarioModificacion());
				
		List<String> listaEtiquetas = new ArrayList<>(nuevaPagina.getEtiquetas());
		enviarPaginaMod.setEtiquetas(listaEtiquetas);
		listaAcciones.add(enviarPaginaMod);
				
		nuevaPagina = new PaginaWeb();
			
		
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",1, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-8)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // tipo_accion ::= AGREGARCOMPONENTE COMILLA MAYOR parametros_agregar_componente atributos MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;
		
		Componente enviarComponente = new Componente();
		enviarComponente.setIdComponenteSinCorchetes(nuevoComponente.getIdComponente());
		enviarComponente.setIdPaginaSinCorchetes(nuevoComponente.getIdPagina());
		enviarComponente.setClaseComponente(nuevoComponente.getClaseComponente());
		List<Atributo> listaAtributos =  new ArrayList<>(nuevoComponente.getListaAtributos());
                enviarComponente.setListaAtributos(listaAtributos);
		listaAcciones.add(enviarComponente);

                nuevoComponente = new Componente();
		
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",1, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-8)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // tipo_accion ::= ELIMINARCOMPONENTE COMILLA MAYOR parametros_eliminar_componente MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;
		
		EliminarComponente componenteElim = new EliminarComponente();
		componenteElim.setIdComponenteSinCorchetes(elimComponente.getIdComponente());
		componenteElim.setIdPaginaSinCorchetes(elimComponente.getIdPagina());
		listaAcciones.add(componenteElim);

                elimComponente = new EliminarComponente();
		
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",1, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // tipo_accion ::= MODIFICARCOMPONENTE COMILLA MAYOR parametros_modificar_componente atributos MENOR DIAGONAL ACCION MAYOR 
            {
              Object RESULT =null;
		
		ModificarComponentes modComponente = new ModificarComponentes();
			
		modComponente.setIdComponenteSinCorchetes(nuevoComponente.getIdComponente());
		modComponente.setIdPaginaSinCorchetes(nuevoComponente.getIdPagina());
		modComponente.setClaseComponente(nuevoComponente.getClaseComponente());
		List<Atributo> listaAtributos =  new ArrayList<>(nuevoComponente.getListaAtributos());
                modComponente.setListaAtributos(listaAtributos);
		listaAcciones.add(modComponente);

                nuevoComponente = new Componente();
		
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_accion",1, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-8)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // parametros_crear_sitio ::= MENOR PARAMETROS MAYOR parametro_lista_crear_sitio PARAMETROSCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_crear_sitio",2, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // parametro_lista_crear_sitio ::= parametro_crear_sitio parametro_lista_crear_sitio 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_crear_sitio",5, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // parametro_lista_crear_sitio ::= parametro_crear_sitio 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_crear_sitio",5, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // parametro_crear_sitio ::= MENOR PARAMETRO NOMBRE IGUAL COMILLA tipo_param_crear_sitio 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_crear_sitio",31, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-5)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // tipo_param_crear_sitio ::= parametro_tipo_id 
            {
              Object RESULT =null;
		int pileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int piright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String pi = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevoSitio.setIdSitio(pi);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_crear_sitio",32, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // tipo_param_crear_sitio ::= parametro_tipo_usuario_creacion 
            {
              Object RESULT =null;
		int ucleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int ucright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String uc = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevoSitio.setUsuarioCreacion(uc);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_crear_sitio",32, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // tipo_param_crear_sitio ::= parametro_tipo_fecha_creacion 
            {
              Object RESULT =null;
		int fcleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int fcright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String fc = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevoSitio.setFechaCreacion(fc);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_crear_sitio",32, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // tipo_param_crear_sitio ::= parametro_tipo_fecha_mod 
            {
              Object RESULT =null;
		int fmleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int fmright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String fm = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevoSitio.setFechaModificacion(fm);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_crear_sitio",32, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // tipo_param_crear_sitio ::= parametro_tipo_usuario_mod 
            {
              Object RESULT =null;
		int umleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int umright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String um = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevoSitio.setUsuarioModificacion(um);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_crear_sitio",32, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // parametros_borrar_sitio ::= MENOR PARAMETROS MAYOR parametro_borrar_sitio PARAMETROSCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_borrar_sitio",3, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // parametro_borrar_sitio ::= MENOR PARAMETRO NOMBRE IGUAL COMILLA parametro_tipo_id 
            {
              Object RESULT =null;
		int pileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int piright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String pi = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
                        nuevoSitio.setIdSitio(pi);
                        
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_borrar_sitio",6, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-5)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // parametros_nueva_pagina ::= MENOR PARAMETROS MAYOR parametro_lista_nueva_pagina PARAMETROSCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_nueva_pagina",7, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // parametro_lista_nueva_pagina ::= parametro_nueva_pagina parametro_lista_nueva_pagina 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_nueva_pagina",26, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // parametro_lista_nueva_pagina ::= parametro_nueva_pagina 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_nueva_pagina",26, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // parametro_nueva_pagina ::= MENOR PARAMETRO NOMBRE IGUAL COMILLA tipo_param_nueva_pagina 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_nueva_pagina",27, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-5)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // tipo_param_nueva_pagina ::= parametro_tipo_id 
            {
              Object RESULT =null;
		int pileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int piright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String pi = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevaPagina.setIdPagina(pi);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",28, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // tipo_param_nueva_pagina ::= TITULO COMILLA MAYOR LITERAL MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int lileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String li = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		
				nuevaPagina.setTitulo(li);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",28, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // tipo_param_nueva_pagina ::= SITIO COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		
				nuevaPagina.setSitio(id);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",28, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // tipo_param_nueva_pagina ::= PADRE COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int paleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int paright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String pa = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		
				nuevaPagina.setIdPadre(pa);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",28, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // tipo_param_nueva_pagina ::= parametro_tipo_usuario_creacion 
            {
              Object RESULT =null;
		int ucleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int ucright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String uc = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevaPagina.setUsuarioCreacion(uc);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",28, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // tipo_param_nueva_pagina ::= parametro_tipo_fecha_creacion 
            {
              Object RESULT =null;
		int fcleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int fcright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String fc = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevaPagina.setFechaCreacion(fc);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",28, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // tipo_param_nueva_pagina ::= parametro_tipo_fecha_mod 
            {
              Object RESULT =null;
		int fmleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int fmright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String fm = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevaPagina.setFechaModificacion(fm);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",28, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // tipo_param_nueva_pagina ::= parametro_tipo_usuario_mod 
            {
              Object RESULT =null;
		int umleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int umright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String um = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevaPagina.setUsuarioModificacion(um);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_nueva_pagina",28, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // parametros_borrar_pagina ::= MENOR PARAMETROS MAYOR parametro_borrar_pagina PARAMETROSCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_borrar_pagina",4, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // parametro_borrar_pagina ::= MENOR PARAMETRO NOMBRE IGUAL COMILLA parametro_tipo_id 
            {
              Object RESULT =null;
		int pileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int piright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String pi = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
	nuevaPagina.setIdPagina(pi);

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_borrar_pagina",8, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-5)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // parametros_modificar_pagina ::= MENOR PARAMETROS MAYOR parametro_lista_modificar_pagina PARAMETROSCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_modificar_pagina",9, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // parametro_lista_modificar_pagina ::= parametro_modificar_pagina parametro_lista_modificar_pagina 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_modificar_pagina",11, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // parametro_lista_modificar_pagina ::= parametro_modificar_pagina 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_modificar_pagina",11, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // parametro_modificar_pagina ::= MENOR PARAMETRO NOMBRE IGUAL COMILLA tipo_param_modificar_pagina 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_modificar_pagina",10, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-5)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // tipo_param_modificar_pagina ::= parametro_tipo_id 
            {
              Object RESULT =null;
		int pileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int piright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String pi = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevaPagina.setIdPagina(pi);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_modificar_pagina",12, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // tipo_param_modificar_pagina ::= TITULO COMILLA MAYOR LITERAL MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int lileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String li = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		
				nuevaPagina.setTitulo(li);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_modificar_pagina",12, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // tipo_param_modificar_pagina ::= SITIO COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		
				nuevaPagina.setSitio(id);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_modificar_pagina",12, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // tipo_param_modificar_pagina ::= PADRE COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int paleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int paright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String pa = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		
				nuevaPagina.setIdPadre(pa);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_modificar_pagina",12, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // tipo_param_modificar_pagina ::= parametro_tipo_usuario_creacion 
            {
              Object RESULT =null;
		int ucleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int ucright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String uc = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevaPagina.setUsuarioCreacion(uc);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_modificar_pagina",12, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // tipo_param_modificar_pagina ::= parametro_tipo_fecha_creacion 
            {
              Object RESULT =null;
		int fcleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int fcright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String fc = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevaPagina.setFechaCreacion(fc);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_modificar_pagina",12, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // tipo_param_modificar_pagina ::= parametro_tipo_fecha_mod 
            {
              Object RESULT =null;
		int fmleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int fmright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String fm = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevaPagina.setFechaModificacion(fm);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_modificar_pagina",12, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // tipo_param_modificar_pagina ::= parametro_tipo_usuario_mod 
            {
              Object RESULT =null;
		int umleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int umright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String um = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevaPagina.setUsuarioModificacion(um);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_modificar_pagina",12, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // parametros_agregar_componente ::= MENOR PARAMETROS MAYOR parametro_lista_agregar_co PARAMETROSCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_agregar_componente",13, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // parametros_eliminar_componente ::= MENOR PARAMETROS MAYOR parametro_lista_eliminar_co PARAMETROSCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_eliminar_componente",20, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // parametro_lista_eliminar_co ::= parametro_eliminar_co parametro_lista_eliminar_co 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_eliminar_co",21, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // parametro_lista_eliminar_co ::= parametro_eliminar_co 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_eliminar_co",21, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // parametro_eliminar_co ::= MENOR PARAMETRO NOMBRE IGUAL COMILLA tipo_param_eliminar_co 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_eliminar_co",22, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-5)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // tipo_param_eliminar_co ::= parametro_tipo_id 
            {
              Object RESULT =null;
		int icleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int icright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String ic = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
                            elimComponente.setIdComponente(ic);
                            
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_eliminar_co",23, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // tipo_param_eliminar_co ::= PAGINA COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int pileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int piright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String pi = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		
                            elimComponente.setIdPagina(pi);
                            
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_eliminar_co",23, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // parametros_modificar_componente ::= MENOR PARAMETROS MAYOR parametro_lista_agregar_co PARAMETROSCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametros_modificar_componente",24, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // parametro_lista_agregar_co ::= parametro_agregar_co parametro_lista_agregar_co 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_agregar_co",14, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // parametro_lista_agregar_co ::= parametro_agregar_co 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_lista_agregar_co",14, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // parametro_agregar_co ::= MENOR PARAMETRO NOMBRE IGUAL COMILLA tipo_param_agregar_co 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_agregar_co",15, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-5)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // tipo_param_agregar_co ::= parametro_tipo_id 
            {
              Object RESULT =null;
		int icleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).left;
		int icright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()).right;
		String ic = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.peek()).value;
		
				nuevoComponente.setIdComponente(ic);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_agregar_co",19, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // tipo_param_agregar_co ::= PAGINA COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int pileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int piright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String pi = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		
				nuevoComponente.setIdPagina(pi);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_agregar_co",19, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // tipo_param_agregar_co ::= CLASE COMILLA MAYOR tipo_clase MENOR DIAGONAL PARAMETRO MAYOR 
            {
              Object RESULT =null;
		int tcleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int tcright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String tc = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		
				nuevoComponente.setClaseComponente(tc);
			
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_param_agregar_co",19, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // tipo_clase ::= TITULOC 
            {
              String RESULT =null;
		RESULT = "TITULO"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_clase",36, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // tipo_clase ::= PARRAFO 
            {
              String RESULT =null;
		RESULT = "PARRAFO"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_clase",36, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // tipo_clase ::= IMAGEN 
            {
              String RESULT =null;
		RESULT = "IMAGEN"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_clase",36, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // tipo_clase ::= VIDEO 
            {
              String RESULT =null;
		RESULT = "VIDEO"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_clase",36, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // tipo_clase ::= MENU 
            {
              String RESULT =null;
		RESULT = "MENU"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("tipo_clase",36, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // parametro_tipo_id ::= IDPARAM COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              String RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		RESULT = i; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_tipo_id",35, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // parametro_tipo_usuario_creacion ::= USUARIOCREACION COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              String RESULT =null;
		int cleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String c = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		RESULT = c; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_tipo_usuario_creacion",37, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // parametro_tipo_fecha_creacion ::= FECHACREACION COMILLA MAYOR VALORFECHA MENOR DIAGONAL PARAMETRO MAYOR 
            {
              String RESULT =null;
		int fleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int fright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String f = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		RESULT = f; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_tipo_fecha_creacion",38, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // parametro_tipo_fecha_mod ::= FECHAMODIFICACION COMILLA MAYOR VALORFECHA MENOR DIAGONAL PARAMETRO MAYOR 
            {
              String RESULT =null;
		int mleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String m = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		RESULT = m; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_tipo_fecha_mod",39, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // parametro_tipo_usuario_mod ::= USUARIOMODIFICACION COMILLA MAYOR VALORID MENOR DIAGONAL PARAMETRO MAYOR 
            {
              String RESULT =null;
		int uleft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int uright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String u = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		RESULT = u; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("parametro_tipo_usuario_mod",40, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // etiquetas ::= CONTENIDOETIQUETA etiqueta ETIQUETASCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("etiquetas",29, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-2)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // etiquetas ::= empty 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("etiquetas",29, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // etiqueta ::= MENOR ETIQUETA VALORETIQUETA IGUAL COMILLA DATOETIQUETA COMILLA DIAGONAL MAYOR etiqueta 
            {
              Object RESULT =null;
		int et1left = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int et1right = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String et1 = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		
		nuevaPagina.setEtiqueta(et1);
	
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("etiqueta",30, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-9)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // etiqueta ::= MENOR ETIQUETA VALORETIQUETA IGUAL COMILLA DATOETIQUETA COMILLA DIAGONAL MAYOR 
            {
              Object RESULT =null;
		int et2left = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-3)).left;
		int et2right = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-3)).right;
		String et2 = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-3)).value;
		
		nuevaPagina.setEtiqueta(et2);
	
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("etiqueta",30, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-8)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // atributos ::= MENOR ATRIBUTOS MAYOR atributo_lista ATRIBUTOSCIERRE 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("atributos",16, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // atributo_lista ::= atributo atributo_lista 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("atributo_lista",17, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-1)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // atributo_lista ::= atributo 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("atributo_lista",17, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // atributo ::= MENOR ATRIBUTO NOMBRE IGUAL COMILLA valor_atributo COMILLA MAYOR LITERAL MENOR DIAGONAL ATRIBUTO MAYOR 
            {
              Object RESULT =null;
		int valeft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)).left;
		int varight = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)).right;
		String va = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-7)).value;
		int lileft = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).left;
		int liright = ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).right;
		String li = (String)((java_cup.runtime.Symbol) CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-4)).value;
		
	nuevoComponente.setAtributo(new Atributo(va, li));

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("atributo",18, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.elementAt(CUP$ParserXML$top-12)), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // valor_atributo ::= TEXTO 
            {
              String RESULT =null;
		RESULT = "TEXTO"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",34, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // valor_atributo ::= ALINEACION 
            {
              String RESULT =null;
		RESULT = "ALINEACION"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",34, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // valor_atributo ::= COLOR 
            {
              String RESULT =null;
		RESULT = "COLOR"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",34, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // valor_atributo ::= ORIGEN 
            {
              String RESULT =null;
		RESULT = "ORIGEN"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",34, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // valor_atributo ::= ALTURA 
            {
              String RESULT =null;
		RESULT = "ALTURA"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",34, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // valor_atributo ::= ANCHO 
            {
              String RESULT =null;
		RESULT = "ANCHO"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",34, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // valor_atributo ::= PADRE 
            {
              String RESULT =null;
		RESULT = "PADRE"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",34, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // valor_atributo ::= ETIQUETAS 
            {
              String RESULT =null;
		RESULT = "ETIQUETAS"; 
              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("valor_atributo",34, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // empty ::= 
            {
              Object RESULT =null;

              CUP$ParserXML$result = parser.getSymbolFactory().newSymbol("empty",33, ((java_cup.runtime.Symbol)CUP$ParserXML$stack.peek()), RESULT);
            }
          return CUP$ParserXML$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$ParserXML$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$ParserXML$do_action(
    int                        CUP$ParserXML$act_num,
    java_cup.runtime.lr_parser CUP$ParserXML$parser,
    java.util.Stack            CUP$ParserXML$stack,
    int                        CUP$ParserXML$top)
    throws java.lang.Exception
    {
              return CUP$ParserXML$do_action_part00000000(
                               CUP$ParserXML$act_num,
                               CUP$ParserXML$parser,
                               CUP$ParserXML$stack,
                               CUP$ParserXML$top);
    }
}

}
