/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.rudyreyes.manejadorweb.vista;

import com.rudyreyes.manejadorweb.LexerXML;
import com.rudyreyes.manejadorweb.ManejadorWeb;
import com.rudyreyes.manejadorweb.ParserXML;
import com.rudyreyes.manejadorweb.modelo.componente.Componente;
import com.rudyreyes.manejadorweb.modelo.componente.EliminarComponente;
import com.rudyreyes.manejadorweb.modelo.componente.ModificarComponentes;
import com.rudyreyes.manejadorweb.modelo.paginaweb.BorrarPaginaWeb;
import com.rudyreyes.manejadorweb.modelo.paginaweb.ModificarPagina;
import com.rudyreyes.manejadorweb.modelo.paginaweb.PaginaWeb;
import com.rudyreyes.manejadorweb.modelo.sitioweb.BorrarSitioWeb;
import com.rudyreyes.manejadorweb.modelo.sitioweb.SitioWeb;
import com.rudyreyes.manejadorweb.modelo.util.AgregarYEliminarComponentes;
import com.rudyreyes.manejadorweb.modelo.util.EscribirPaginasWeb;
import com.rudyreyes.manejadorweb.modelo.util.EscribirSitiosWeb;
import com.rudyreyes.manejadorweb.modelo.util.GenerarArchivos;
import com.rudyreyes.manejadorweb.modelo.util.ImprimirDatosConsola;
import com.rudyreyes.manejadorweb.modelo.util.VerificacionesHtml;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author rudyo
 */
public class VentanaPrincipal extends javax.swing.JFrame {
    List<SitioWeb> sitios = new ArrayList<>();
    List<PaginaWeb> paginas = new ArrayList<>();
    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        areaXML = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        subirArchivo = new javax.swing.JButton();
        generarPaginas = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaErrores = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        verConsultas = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Generar Paginas");

        jPanel1.setBackground(new java.awt.Color(153, 255, 204));

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("APLICACION CLIENTE");

        areaXML.setColumns(20);
        areaXML.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        areaXML.setRows(5);
        jScrollPane2.setViewportView(areaXML);

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Codigo XML");

        subirArchivo.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        subirArchivo.setText("Subir Archivo");

        generarPaginas.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        generarPaginas.setText("Generar Paginas");
        generarPaginas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarPaginasActionPerformed(evt);
            }
        });

        areaErrores.setColumns(20);
        areaErrores.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        areaErrores.setRows(5);
        jScrollPane1.setViewportView(areaErrores);

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Area de Respuestas y Errores del sistema");

        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jTextArea2.setRows(5);
        jScrollPane3.setViewportView(jTextArea2);

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Area de Consultas");

        verConsultas.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        verConsultas.setText("Ver Consultas");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(subirArchivo))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(generarPaginas, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(verConsultas)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(subirArchivo)
                        .addGap(30, 30, 30)
                        .addComponent(generarPaginas)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(verConsultas)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1)))
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generarPaginasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarPaginasActionPerformed
        String entradaXML = areaXML.getText();
        areaErrores.setText("");
        if (entradaXML != null) {
            LexerXML lexer = new LexerXML(new StringReader(entradaXML));
            ParserXML parser = new ParserXML(lexer);

            try {
                parser.parse();
                List<Object> acciones = new ArrayList<>(parser.obtenerAcciones());

                for (Object objetos : acciones) {

                    //AGREGAR COMPONENTES
                    if (objetos instanceof Componente) {
                        Componente nuevoComponente = (Componente) objetos;
                        if (nuevoComponente != null) {
                            nuevoComponente.imprimirComponentes();
                            if (VerificacionesHtml.verficarAgregarComponente(nuevoComponente)) {
                                boolean encontrado = AgregarYEliminarComponentes.agregarComponente(paginas, nuevoComponente);
                                if (encontrado) {
                                    EscribirPaginasWeb.generarUnaPaginaWebID(paginas, nuevoComponente.getIdPagina());
                                    ImprimirDatosConsola.imprimirPaginasWeb(paginas);
                                } else {
                                    areaErrores.append("La pagina para agregar el componente no existe\n");
                                }
                            } else {
                                areaErrores.append("Inserte el ID, Pagina o Clase del componente a agregar\n");
                            }
                        }

                    }
                    
                    //MODIFICAR COMPONENTES
                    else if (objetos instanceof ModificarComponentes) {
                        ModificarComponentes nuevoComponente = (ModificarComponentes) objetos;
                        if (nuevoComponente != null) {
                            nuevoComponente.imprimirComponentes();
                            //LISTO
                            if(VerificacionesHtml.verificarModificarComponente(nuevoComponente)){
                                boolean encontrado =AgregarYEliminarComponentes.modificarComponente(paginas, nuevoComponente);
                                if (encontrado) {
                                    EscribirPaginasWeb.generarUnaPaginaWebID(paginas, nuevoComponente.getIdPagina());
                                    ImprimirDatosConsola.imprimirPaginasWeb(paginas);
                                } else {
                                    areaErrores.append("La pagina para agregar el componente no existe\n");
                                }
                            } else {
                                areaErrores.append("Inserte el ID, Pagina o Clase del componente a agregar\n");
                            }
                        }

                    } 
                    
                    //ELIMINAR COMPONENTES
                    else if (objetos instanceof EliminarComponente) {
                        EliminarComponente nuevoComponente = (EliminarComponente) objetos;
                        if (nuevoComponente != null) {
                            nuevoComponente.imprimirComponentes();
                            //HACER VERIFICACIONES
                            //YA ESTA MANEJADO
                            if(VerificacionesHtml.verificarEliminarComponente(nuevoComponente)){
                                boolean encontrado =AgregarYEliminarComponentes.eliminarComponente(paginas, nuevoComponente);
                                if (encontrado) {
                                    EscribirPaginasWeb.generarUnaPaginaWebID(paginas, nuevoComponente.getIdPagina());
                                    ImprimirDatosConsola.imprimirPaginasWeb(paginas);
                                } else {
                                    areaErrores.append("La pagina para eliminar el componente no existe\n");
                                }
                            } else {
                                areaErrores.append("Inserte el ID, Pagina del componente a eliminar\n");
                            }
                        }

                    }
                    
                    //NUEVA PAGINA WEB
                    else if (objetos instanceof PaginaWeb) {
                        PaginaWeb nuevoComponente = (PaginaWeb) objetos;
                        if (nuevoComponente != null) {
                            nuevoComponente.imprimirPagina();
                            if (VerificacionesHtml.verificarPaginaWeb(nuevoComponente)) {
                                paginas.add(nuevoComponente);
                                String contenido = EscribirPaginasWeb.generarContenidoHTMLPagina(nuevoComponente, paginas);
                                GenerarArchivos.escribirArchivo(contenido, nuevoComponente.getIdPagina());
                            } else {
                                areaErrores.append("Inserte el ID o el Sitio de la pagina web que desea crear\n");
                            }

                            ImprimirDatosConsola.imprimirPaginasWeb(paginas);
                        }

                    }
                    
                    //BORRAR PAGINA WEB
                    else if (objetos instanceof BorrarPaginaWeb) {
                        BorrarPaginaWeb nuevoComponente = (BorrarPaginaWeb) objetos;
                        if (nuevoComponente != null) {
                            nuevoComponente.imprimirBorrarPagina();
                            if (VerificacionesHtml.borrarPaginaWeb(nuevoComponente)) {
                                AgregarYEliminarComponentes.borrarPaginaWeb(paginas, nuevoComponente);
                                //DEBERIA REMOVER TAMBIEN EL ARCHIVO HTML
                            } else {
                                areaErrores.setText("Inserte el ID de la pagina web que desea borrar\n");
                            }
                            ImprimirDatosConsola.imprimirPaginasWeb(paginas);
                        }
                    }
                    
                    //MODIFICAR PAGINA WEB
                    else if (objetos instanceof ModificarPagina) {
                        ModificarPagina nuevoComponente = (ModificarPagina) objetos;
                        if (nuevoComponente != null) {
                            nuevoComponente.imprimirPagina();
                            if (VerificacionesHtml.modificarPaginaWeb(nuevoComponente)) {
                                AgregarYEliminarComponentes.modificarPaginaWeb(paginas, nuevoComponente);
                                EscribirPaginasWeb.generarUnaPaginaWebID(paginas, nuevoComponente.getIdPagina());
                            }
                        }

                        ImprimirDatosConsola.imprimirPaginasWeb(paginas);

                    }
                    
                    //SITIO WEB
                    else if (objetos instanceof SitioWeb) {
                        SitioWeb nuevoComponente = (SitioWeb) objetos;
                        if (nuevoComponente != null) {
                            nuevoComponente.imprimirSitio();
                            if (VerificacionesHtml.verificarSitiosWeb(nuevoComponente)) {
                                sitios.add(nuevoComponente);
                                String contenido = EscribirSitiosWeb.generarContenidoHTMLSitio(nuevoComponente.getIdSitio(), "Sitio Web " + nuevoComponente.getIdSitio());
                                GenerarArchivos.escribirArchivo(contenido, nuevoComponente.getIdSitio());
                            } else {
                                areaErrores.append("Inserte el ID del sitio web que desea crear\n");
                            }
                        }
                        ImprimirDatosConsola.imprimirSitiosWeb(sitios);

                    }
                    
                    //BORRAR SITIO WEB
                    else if (objetos instanceof BorrarSitioWeb) {
                        BorrarSitioWeb nuevoComponente = (BorrarSitioWeb) objetos;
                        if (nuevoComponente != null) {
                            nuevoComponente.imprimirBorrarSitio();
                            if (VerificacionesHtml.verificarBorrarSitio(nuevoComponente)) {
                                AgregarYEliminarComponentes.borrarSitioWeb(sitios, nuevoComponente);
                                //DEBERIA REMOVER TAMBIEN EL ARCHIVO HTML
                            } else {
                                areaErrores.append("Inserte el ID del sitio web que desea borrar\n");
                            }
                        }
                        
                        ImprimirDatosConsola.imprimirSitiosWeb(sitios);

                    }
                }
            } catch (Exception ex) {
                Logger.getLogger(ManejadorWeb.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            parser.limpiarAcciones();
        }


    }//GEN-LAST:event_generarPaginasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaErrores;
    private javax.swing.JTextArea areaXML;
    private javax.swing.JButton generarPaginas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JButton subirArchivo;
    private javax.swing.JButton verConsultas;
    // End of variables declaration//GEN-END:variables
}
